
> @itineramio/web@2.0.0 dev
> next dev --port 3000

   ▲ Next.js 15.3.3
   - Local:        http://localhost:3000
   - Network:      http://192.168.1.137:3000
   - Environments: .env.local

 ✓ Starting...
 ✓ Ready in 1104ms
 ✓ Compiled /api/admin/settings in 440ms (365 modules)
prisma:query SELECT "public"."system_settings"."id", "public"."system_settings"."key", "public"."system_settings"."value", "public"."system_settings"."type" FROM "public"."system_settings" WHERE 1=1 OFFSET $1
 GET /api/admin/settings 200 in 1539ms
prisma:query INSERT INTO "public"."system_settings" ("id","key","value","type","description","created_at","updated_at") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("key") DO UPDATE SET "value" = $8, "type" = $9, "updated_at" = $10 WHERE ("public"."system_settings"."key" = $11 AND 1=1) RETURNING "public"."system_settings"."id", "public"."system_settings"."key", "public"."system_settings"."value", "public"."system_settings"."type", "public"."system_settings"."description", "public"."system_settings"."created_at", "public"."system_settings"."updated_at"
prisma:query INSERT INTO "public"."system_settings" ("id","key","value","type","description","created_at","updated_at") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("key") DO UPDATE SET "value" = $8, "type" = $9, "updated_at" = $10 WHERE ("public"."system_settings"."key" = $11 AND 1=1) RETURNING "public"."system_settings"."id", "public"."system_settings"."key", "public"."system_settings"."value", "public"."system_settings"."type", "public"."system_settings"."description", "public"."system_settings"."created_at", "public"."system_settings"."updated_at"
prisma:query INSERT INTO "public"."system_settings" ("id","key","value","type","description","created_at","updated_at") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("key") DO UPDATE SET "value" = $8, "type" = $9, "updated_at" = $10 WHERE ("public"."system_settings"."key" = $11 AND 1=1) RETURNING "public"."system_settings"."id", "public"."system_settings"."key", "public"."system_settings"."value", "public"."system_settings"."type", "public"."system_settings"."description", "public"."system_settings"."created_at", "public"."system_settings"."updated_at"
prisma:query SELECT "public"."users"."id" FROM "public"."users" WHERE "public"."users"."isAdmin" = $1 LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."admin_activity_log" ("id","admin_user_id","action","target_type","target_id","description","metadata","created_at") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at"
 POST /api/admin/settings 200 in 983ms
prisma:query SELECT "public"."system_settings"."id", "public"."system_settings"."key", "public"."system_settings"."value", "public"."system_settings"."type" FROM "public"."system_settings" WHERE 1=1 OFFSET $1
 GET /api/admin/settings 200 in 140ms
 ✓ Compiled /api/admin/logs in 152ms (367 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at" FROM "public"."admin_activity_log" WHERE 1=1 ORDER BY "public"."admin_activity_log"."created_at" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."admin_activity_log"."id" FROM "public"."admin_activity_log" WHERE 1=1 OFFSET $1) AS "sub"
 GET /api/admin/logs 200 in 641ms
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at" FROM "public"."admin_activity_log" WHERE "public"."admin_activity_log"."action" = $1 ORDER BY "public"."admin_activity_log"."created_at" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."admin_activity_log"."id" FROM "public"."admin_activity_log" WHERE "public"."admin_activity_log"."action" = $1 OFFSET $2) AS "sub"
 GET /api/admin/logs?action=system_settings_updated 200 in 395ms
 ✓ Compiled /middleware in 119ms (108 modules)
 ○ Compiling /admin/billing ...
 ✓ Compiled /admin/billing in 1181ms (1007 modules)
 ✓ Compiled in 287ms (451 modules)
 GET /admin/billing 200 in 1483ms
 ✓ Compiled /api/auth/me in 357ms (1076 modules)
Auth check - token exists: false
 GET /api/auth/me 401 in 406ms
prisma:query SELECT 1
prisma:query SELECT "public"."invoices"."id", "public"."invoices"."user_id", "public"."invoices"."subscription_id", "public"."invoices"."invoice_number", "public"."invoices"."amount", "public"."invoices"."discount_amount", "public"."invoices"."final_amount", "public"."invoices"."status", "public"."invoices"."payment_method", "public"."invoices"."payment_reference", "public"."invoices"."due_date", "public"."invoices"."paid_date", "public"."invoices"."notes", "public"."invoices"."created_by", "public"."invoices"."created_at", "public"."invoices"."updated_at" FROM "public"."invoices" WHERE 1=1 ORDER BY "public"."invoices"."created_at" DESC OFFSET $1
 GET /api/admin/invoices 200 in 629ms
 ✓ Compiled /admin/plans in 231ms (1091 modules)
 GET /admin/plans 200 in 281ms
 ✓ Compiled /api/admin/plans in 128ms (1093 modules)
prisma:query SELECT "public"."subscription_plans"."id", "public"."subscription_plans"."name", "public"."subscription_plans"."description", "public"."subscription_plans"."price_monthly", "public"."subscription_plans"."price_yearly", "public"."subscription_plans"."ai_messages_included", "public"."subscription_plans"."max_properties", "public"."subscription_plans"."features", "public"."subscription_plans"."is_active", "public"."subscription_plans"."created_at", "public"."subscription_plans"."updated_at", COALESCE("aggr_selection_0_UserSubscription"."_aggr_count_subscriptions", 0) AS "_aggr_count_subscriptions" FROM "public"."subscription_plans" LEFT JOIN (SELECT "public"."user_subscriptions"."plan_id", COUNT(*) AS "_aggr_count_subscriptions" FROM "public"."user_subscriptions" WHERE 1=1 GROUP BY "public"."user_subscriptions"."plan_id") AS "aggr_selection_0_UserSubscription" ON ("public"."subscription_plans"."id" = "aggr_selection_0_UserSubscription"."plan_id") WHERE 1=1 ORDER BY "public"."subscription_plans"."price_monthly" ASC OFFSET $1
 GET /api/admin/plans 200 in 301ms
prisma:query SELECT "public"."subscription_plans"."id", "public"."subscription_plans"."name", "public"."subscription_plans"."description", "public"."subscription_plans"."price_monthly", "public"."subscription_plans"."price_yearly", "public"."subscription_plans"."ai_messages_included", "public"."subscription_plans"."max_properties", "public"."subscription_plans"."features", "public"."subscription_plans"."is_active", "public"."subscription_plans"."created_at", "public"."subscription_plans"."updated_at", COALESCE("aggr_selection_0_UserSubscription"."_aggr_count_subscriptions", 0) AS "_aggr_count_subscriptions" FROM "public"."subscription_plans" LEFT JOIN (SELECT "public"."user_subscriptions"."plan_id", COUNT(*) AS "_aggr_count_subscriptions" FROM "public"."user_subscriptions" WHERE 1=1 GROUP BY "public"."user_subscriptions"."plan_id") AS "aggr_selection_0_UserSubscription" ON ("public"."subscription_plans"."id" = "aggr_selection_0_UserSubscription"."plan_id") WHERE 1=1 ORDER BY "public"."subscription_plans"."price_monthly" ASC OFFSET $1
 GET /api/admin/plans 200 in 69ms
 ✓ Compiled /admin/properties in 279ms (1112 modules)
 GET /admin/properties 200 in 326ms
 ✓ Compiled /api/admin/properties in 130ms (1114 modules)
prisma:query SELECT "public"."properties"."id", "public"."properties"."hostId", "public"."properties"."organizationId", "public"."properties"."buildingId", "public"."properties"."propertySetId", "public"."properties"."name", "public"."properties"."description", "public"."properties"."street", "public"."properties"."city", "public"."properties"."state", "public"."properties"."country", "public"."properties"."postalCode", "public"."properties"."latitude", "public"."properties"."longitude", "public"."properties"."type", "public"."properties"."bedrooms", "public"."properties"."bathrooms", "public"."properties"."maxGuests", "public"."properties"."squareMeters", "public"."properties"."defaultLanguages", "public"."properties"."isPublished", "public"."properties"."profileImage", "public"."properties"."hostContactName", "public"."properties"."hostContactPhone", "public"."properties"."hostContactEmail", "public"."properties"."hostContactLanguage", "public"."properties"."hostContactPhoto", "public"."properties"."status", "public"."properties"."createdAt", "public"."properties"."updatedAt", "public"."properties"."publishedAt", "public"."properties"."slug" FROM "public"."properties" WHERE 1=1 ORDER BY "public"."properties"."createdAt" DESC OFFSET $1
 GET /api/admin/properties 200 in 323ms
prisma:query SELECT "public"."properties"."id", "public"."properties"."hostId", "public"."properties"."organizationId", "public"."properties"."buildingId", "public"."properties"."propertySetId", "public"."properties"."name", "public"."properties"."description", "public"."properties"."street", "public"."properties"."city", "public"."properties"."state", "public"."properties"."country", "public"."properties"."postalCode", "public"."properties"."latitude", "public"."properties"."longitude", "public"."properties"."type", "public"."properties"."bedrooms", "public"."properties"."bathrooms", "public"."properties"."maxGuests", "public"."properties"."squareMeters", "public"."properties"."defaultLanguages", "public"."properties"."isPublished", "public"."properties"."profileImage", "public"."properties"."hostContactName", "public"."properties"."hostContactPhone", "public"."properties"."hostContactEmail", "public"."properties"."hostContactLanguage", "public"."properties"."hostContactPhoto", "public"."properties"."status", "public"."properties"."createdAt", "public"."properties"."updatedAt", "public"."properties"."publishedAt", "public"."properties"."slug" FROM "public"."properties" WHERE 1=1 ORDER BY "public"."properties"."createdAt" DESC OFFSET $1
 GET /api/admin/properties 200 in 69ms
 ✓ Compiled /admin/users in 179ms (1143 modules)
 GET /admin/users 200 in 209ms
 ✓ Compiled /api/admin/users in 105ms (1145 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."users"."id", "public"."users"."email", "public"."users"."name", "public"."users"."phone", "public"."users"."password", "public"."users"."emailVerified", "public"."users"."phoneVerified", "public"."users"."preferredLanguage", "public"."users"."timezone", "public"."users"."role", "public"."users"."status", "public"."users"."subscription", "public"."users"."createdAt", "public"."users"."updatedAt", "public"."users"."lastLoginAt", "public"."users"."avatar", "public"."users"."isAdmin", "public"."users"."isActive", "public"."users"."companyName", "public"."users"."notes", "public"."users"."createdBy" FROM "public"."users" WHERE 1=1 ORDER BY "public"."users"."createdAt" DESC OFFSET $1
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."hostId" FROM "public"."properties" WHERE "public"."properties"."hostId" IN ($1) OFFSET $2
prisma:query SELECT "public"."user_subscriptions"."id", "public"."user_subscriptions"."user_id", "public"."user_subscriptions"."plan_id", "public"."user_subscriptions"."status", "public"."user_subscriptions"."custom_price", "public"."user_subscriptions"."discount_percentage", "public"."user_subscriptions"."discount_reason", "public"."user_subscriptions"."start_date", "public"."user_subscriptions"."end_date", "public"."user_subscriptions"."notes", "public"."user_subscriptions"."created_by", "public"."user_subscriptions"."created_at", "public"."user_subscriptions"."updated_at" FROM "public"."user_subscriptions" WHERE ("public"."user_subscriptions"."status" = $1 AND "public"."user_subscriptions"."user_id" IN ($2)) ORDER BY "public"."user_subscriptions"."created_at" DESC LIMIT $3 OFFSET $4
 GET /api/admin/users 200 in 601ms
prisma:query SELECT "public"."users"."id", "public"."users"."email", "public"."users"."name", "public"."users"."phone", "public"."users"."password", "public"."users"."emailVerified", "public"."users"."phoneVerified", "public"."users"."preferredLanguage", "public"."users"."timezone", "public"."users"."role", "public"."users"."status", "public"."users"."subscription", "public"."users"."createdAt", "public"."users"."updatedAt", "public"."users"."lastLoginAt", "public"."users"."avatar", "public"."users"."isAdmin", "public"."users"."isActive", "public"."users"."companyName", "public"."users"."notes", "public"."users"."createdBy" FROM "public"."users" WHERE 1=1 ORDER BY "public"."users"."createdAt" DESC OFFSET $1
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."hostId" FROM "public"."properties" WHERE "public"."properties"."hostId" IN ($1) OFFSET $2
prisma:query SELECT "public"."user_subscriptions"."id", "public"."user_subscriptions"."user_id", "public"."user_subscriptions"."plan_id", "public"."user_subscriptions"."status", "public"."user_subscriptions"."custom_price", "public"."user_subscriptions"."discount_percentage", "public"."user_subscriptions"."discount_reason", "public"."user_subscriptions"."start_date", "public"."user_subscriptions"."end_date", "public"."user_subscriptions"."notes", "public"."user_subscriptions"."created_by", "public"."user_subscriptions"."created_at", "public"."user_subscriptions"."updated_at" FROM "public"."user_subscriptions" WHERE ("public"."user_subscriptions"."status" = $1 AND "public"."user_subscriptions"."user_id" IN ($2)) ORDER BY "public"."user_subscriptions"."created_at" DESC LIMIT $3 OFFSET $4
 GET /api/admin/users 200 in 231ms
 ✓ Compiled /admin/logs in 201ms (1162 modules)
 GET /admin/logs 200 in 250ms
 ✓ Compiled /api/admin/logs in 98ms (691 modules)
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at" FROM "public"."admin_activity_log" WHERE 1=1 ORDER BY "public"."admin_activity_log"."created_at" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."admin_activity_log"."id" FROM "public"."admin_activity_log" WHERE 1=1 OFFSET $1) AS "sub"
 GET /api/admin/logs? 200 in 320ms
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at" FROM "public"."admin_activity_log" WHERE 1=1 ORDER BY "public"."admin_activity_log"."created_at" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."admin_activity_log"."id" FROM "public"."admin_activity_log" WHERE 1=1 OFFSET $1) AS "sub"
 GET /api/admin/logs? 200 in 213ms
 ✓ Compiled /admin in 136ms (1173 modules)
 GET /admin 200 in 166ms
 ✓ Compiled /api/admin/dashboard-stats in 113ms (1175 modules)
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE "public"."users"."isActive" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."properties"."id" FROM "public"."properties" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at" FROM "public"."admin_activity_log" WHERE 1=1 ORDER BY "public"."admin_activity_log"."created_at" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
 GET /api/admin/dashboard-stats 200 in 913ms
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE "public"."users"."isActive" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at" FROM "public"."admin_activity_log" WHERE 1=1 ORDER BY "public"."admin_activity_log"."created_at" DESC LIMIT $1 OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."properties"."id" FROM "public"."properties" WHERE 1=1 OFFSET $1) AS "sub"
 GET /api/admin/dashboard-stats 200 in 464ms
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
 GET /admin/logs 200 in 34ms
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at" FROM "public"."admin_activity_log" WHERE 1=1 ORDER BY "public"."admin_activity_log"."created_at" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."admin_activity_log"."id" FROM "public"."admin_activity_log" WHERE 1=1 OFFSET $1) AS "sub"
 GET /api/admin/logs? 200 in 270ms
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at" FROM "public"."admin_activity_log" WHERE 1=1 ORDER BY "public"."admin_activity_log"."created_at" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."admin_activity_log"."id" FROM "public"."admin_activity_log" WHERE 1=1 OFFSET $1) AS "sub"
 GET /api/admin/logs? 200 in 206ms
 ✓ Compiled in 249ms (490 modules)
 GET /admin/logs 200 in 21ms
 ✓ Compiled in 134ms (490 modules)
 GET /admin/logs 200 in 14ms
 ✓ Compiled in 358ms (1159 modules)
 GET /admin/logs 200 in 406ms
 GET /admin/logs 200 in 12ms
 ✓ Compiled in 223ms (490 modules)
 GET /admin/logs 200 in 17ms
 ✓ Compiled in 154ms (490 modules)
 GET /admin/logs 200 in 35ms
 ✓ Compiled in 127ms (490 modules)
 GET /admin/logs 200 in 13ms
 ✓ Compiled in 145ms (490 modules)
 GET /admin/logs 200 in 34ms
 ✓ Compiled in 123ms (490 modules)
 GET /admin/logs 200 in 9ms
 ✓ Compiled in 158ms (490 modules)
 GET /admin/logs 200 in 54ms
 ✓ Compiled in 193ms (490 modules)
 GET /admin/logs 200 in 18ms
 ✓ Compiled in 141ms (490 modules)
 GET /admin/logs 200 in 11ms
 ✓ Compiled in 141ms (490 modules)
 GET /admin/logs 200 in 33ms
 ✓ Compiled in 129ms (490 modules)
 GET /admin/logs 200 in 9ms
 ✓ Compiled in 137ms (490 modules)
 GET /admin/logs 200 in 35ms
 ✓ Compiled /api/chatbot in 276ms (1071 modules)
prisma:query SELECT "public"."properties"."id", "public"."properties"."hostId", "public"."properties"."organizationId", "public"."properties"."buildingId", "public"."properties"."propertySetId", "public"."properties"."name", "public"."properties"."description", "public"."properties"."street", "public"."properties"."city", "public"."properties"."state", "public"."properties"."country", "public"."properties"."postalCode", "public"."properties"."latitude", "public"."properties"."longitude", "public"."properties"."type", "public"."properties"."bedrooms", "public"."properties"."bathrooms", "public"."properties"."maxGuests", "public"."properties"."squareMeters", "public"."properties"."defaultLanguages", "public"."properties"."isPublished", "public"."properties"."profileImage", "public"."properties"."hostContactName", "public"."properties"."hostContactPhone", "public"."properties"."hostContactEmail", "public"."properties"."hostContactLanguage", "public"."properties"."hostContactPhoto", "public"."properties"."status", "public"."properties"."createdAt", "public"."properties"."updatedAt", "public"."properties"."publishedAt", "public"."properties"."slug" FROM "public"."properties" WHERE ("public"."properties"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."zones"."id", "public"."zones"."propertyId", "public"."zones"."organizationId", "public"."zones"."buildingId", "public"."zones"."name", "public"."zones"."description", "public"."zones"."icon", "public"."zones"."color", "public"."zones"."order", "public"."zones"."qrCode", "public"."zones"."accessCode", "public"."zones"."whatsappEnabled", "public"."zones"."errorReportsEnabled", "public"."zones"."commentsEnabled", "public"."zones"."ratingsEnabled", "public"."zones"."status", "public"."zones"."isPublished", "public"."zones"."viewCount", "public"."zones"."lastViewedAt", "public"."zones"."avgRating", "public"."zones"."createdAt", "public"."zones"."updatedAt", "public"."zones"."publishedAt", "public"."zones"."slug" FROM "public"."zones" WHERE ("public"."zones"."id" = $1 AND "public"."zones"."propertyId" IN ($2)) OFFSET $3
prisma:query SELECT "public"."steps"."id", "public"."steps"."zoneId", "public"."steps"."type", "public"."steps"."title", "public"."steps"."content", "public"."steps"."order", "public"."steps"."isPublished", "public"."steps"."createdAt", "public"."steps"."updatedAt" FROM "public"."steps" WHERE "public"."steps"."zoneId" IN ($1) ORDER BY "public"."steps"."order" ASC OFFSET $2
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email", "public"."users"."phone" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
 POST /api/chatbot 200 in 1452ms
 ✓ Compiled /api/public/zones/[zoneCode] in 109ms (1073 modules)
prisma:query SELECT "public"."zones"."id", "public"."zones"."propertyId", "public"."zones"."organizationId", "public"."zones"."buildingId", "public"."zones"."name", "public"."zones"."description", "public"."zones"."icon", "public"."zones"."color", "public"."zones"."order", "public"."zones"."qrCode", "public"."zones"."accessCode", "public"."zones"."whatsappEnabled", "public"."zones"."errorReportsEnabled", "public"."zones"."commentsEnabled", "public"."zones"."ratingsEnabled", "public"."zones"."status", "public"."zones"."isPublished", "public"."zones"."viewCount", "public"."zones"."lastViewedAt", "public"."zones"."avgRating", "public"."zones"."createdAt", "public"."zones"."updatedAt", "public"."zones"."publishedAt", "public"."zones"."slug" FROM "public"."zones" WHERE ("public"."zones"."accessCode" = $1 AND "public"."zones"."isPublished" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."steps"."id", "public"."steps"."zoneId", "public"."steps"."type", "public"."steps"."title", "public"."steps"."content", "public"."steps"."order", "public"."steps"."isPublished", "public"."steps"."createdAt", "public"."steps"."updatedAt" FROM "public"."steps" WHERE ("public"."steps"."isPublished" = $1 AND "public"."steps"."zoneId" IN ($2)) ORDER BY "public"."steps"."order" ASC OFFSET $3
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."city", "public"."properties"."country", "public"."properties"."isPublished", "public"."properties"."hostContactName", "public"."properties"."hostContactPhone", "public"."properties"."hostContactEmail" FROM "public"."properties" WHERE "public"."properties"."id" IN ($1) OFFSET $2
 GET /api/public/zones/welcome-test 200 in 840ms
 ✓ Compiled /api/admin/settings in 147ms (599 modules)
Error updating system settings: SyntaxError: Unexpected token ! in JSON at position 54
    at JSON.parse (<anonymous>)
    at async POST (app/api/admin/settings/route.ts:62:21)
  60 |     // TODO: Implement requireAdmin(request) when auth is ready
  61 |     
> 62 |     const settings = await request.json();
     |                     ^
  63 |
  64 |     // Define setting types for proper storage
  65 |     const settingTypes: Record<string, string> = {
 POST /api/admin/settings 500 in 242ms
 GET /admin/logs 200 in 30ms
Error updating system settings: SyntaxError: Unexpected token ! in JSON at position 53
    at JSON.parse (<anonymous>)
    at async POST (app/api/admin/settings/route.ts:62:21)
  60 |     // TODO: Implement requireAdmin(request) when auth is ready
  61 |     
> 62 |     const settings = await request.json();
     |                     ^
  63 |
  64 |     // Define setting types for proper storage
  65 |     const settingTypes: Record<string, string> = {
 POST /api/admin/settings 500 in 52ms
prisma:query SELECT 1
prisma:query INSERT INTO "public"."system_settings" ("id","key","value","type","description","created_at","updated_at") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("key") DO UPDATE SET "value" = $8, "type" = $9, "updated_at" = $10 WHERE ("public"."system_settings"."key" = $11 AND 1=1) RETURNING "public"."system_settings"."id", "public"."system_settings"."key", "public"."system_settings"."value", "public"."system_settings"."type", "public"."system_settings"."description", "public"."system_settings"."created_at", "public"."system_settings"."updated_at"
prisma:query SELECT "public"."users"."id" FROM "public"."users" WHERE "public"."users"."isAdmin" = $1 LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."admin_activity_log" ("id","admin_user_id","action","target_type","target_id","description","metadata","created_at") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at"
 POST /api/admin/settings 200 in 500ms
Error updating system settings: SyntaxError: Unexpected token ! in JSON at position 82
    at JSON.parse (<anonymous>)
    at async POST (app/api/admin/settings/route.ts:62:21)
  60 |     // TODO: Implement requireAdmin(request) when auth is ready
  61 |     
> 62 |     const settings = await request.json();
     |                     ^
  63 |
  64 |     // Define setting types for proper storage
  65 |     const settingTypes: Record<string, string> = {
 POST /api/admin/settings 500 in 32ms
prisma:query SELECT 1
prisma:query INSERT INTO "public"."system_settings" ("id","key","value","type","description","created_at","updated_at") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("key") DO UPDATE SET "value" = $8, "type" = $9, "updated_at" = $10 WHERE ("public"."system_settings"."key" = $11 AND 1=1) RETURNING "public"."system_settings"."id", "public"."system_settings"."key", "public"."system_settings"."value", "public"."system_settings"."type", "public"."system_settings"."description", "public"."system_settings"."created_at", "public"."system_settings"."updated_at"
prisma:query INSERT INTO "public"."system_settings" ("id","key","value","type","description","created_at","updated_at") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("key") DO UPDATE SET "value" = $8, "type" = $9, "updated_at" = $10 WHERE ("public"."system_settings"."key" = $11 AND 1=1) RETURNING "public"."system_settings"."id", "public"."system_settings"."key", "public"."system_settings"."value", "public"."system_settings"."type", "public"."system_settings"."description", "public"."system_settings"."created_at", "public"."system_settings"."updated_at"
prisma:query INSERT INTO "public"."system_settings" ("id","key","value","type","description","created_at","updated_at") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("key") DO UPDATE SET "value" = $8, "type" = $9, "updated_at" = $10 WHERE ("public"."system_settings"."key" = $11 AND 1=1) RETURNING "public"."system_settings"."id", "public"."system_settings"."key", "public"."system_settings"."value", "public"."system_settings"."type", "public"."system_settings"."description", "public"."system_settings"."created_at", "public"."system_settings"."updated_at"
prisma:query SELECT "public"."users"."id" FROM "public"."users" WHERE "public"."users"."isAdmin" = $1 LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."admin_activity_log" ("id","admin_user_id","action","target_type","target_id","description","metadata","created_at") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at"
 POST /api/admin/settings 200 in 1152ms
 ○ Compiling /z/[zoneCode] ...
 ✓ Compiled /z/[zoneCode] in 1355ms (1692 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 1829ms
 ✓ Compiled /api/public/zones/[zoneCode] in 198ms (996 modules)
 ✓ Compiled (998 modules)
Auth check - token exists: false
 GET /api/auth/me 401 in 362ms
prisma:query SELECT 1
prisma:query SELECT "public"."zones"."id", "public"."zones"."propertyId", "public"."zones"."organizationId", "public"."zones"."buildingId", "public"."zones"."name", "public"."zones"."description", "public"."zones"."icon", "public"."zones"."color", "public"."zones"."order", "public"."zones"."qrCode", "public"."zones"."accessCode", "public"."zones"."whatsappEnabled", "public"."zones"."errorReportsEnabled", "public"."zones"."commentsEnabled", "public"."zones"."ratingsEnabled", "public"."zones"."status", "public"."zones"."isPublished", "public"."zones"."viewCount", "public"."zones"."lastViewedAt", "public"."zones"."avgRating", "public"."zones"."createdAt", "public"."zones"."updatedAt", "public"."zones"."publishedAt", "public"."zones"."slug" FROM "public"."zones" WHERE ("public"."zones"."accessCode" = $1 AND "public"."zones"."isPublished" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."steps"."id", "public"."steps"."zoneId", "public"."steps"."type", "public"."steps"."title", "public"."steps"."content", "public"."steps"."order", "public"."steps"."isPublished", "public"."steps"."createdAt", "public"."steps"."updatedAt" FROM "public"."steps" WHERE ("public"."steps"."isPublished" = $1 AND "public"."steps"."zoneId" IN ($2)) ORDER BY "public"."steps"."order" ASC OFFSET $3
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."city", "public"."properties"."country", "public"."properties"."isPublished", "public"."properties"."hostContactName", "public"."properties"."hostContactPhone", "public"."properties"."hostContactEmail" FROM "public"."properties" WHERE "public"."properties"."id" IN ($1) OFFSET $2
 GET /api/public/zones/welcome-test 200 in 899ms
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 115ms
Auth check - token exists: false
 GET /api/auth/me 401 in 13ms
prisma:query SELECT "public"."zones"."id", "public"."zones"."propertyId", "public"."zones"."organizationId", "public"."zones"."buildingId", "public"."zones"."name", "public"."zones"."description", "public"."zones"."icon", "public"."zones"."color", "public"."zones"."order", "public"."zones"."qrCode", "public"."zones"."accessCode", "public"."zones"."whatsappEnabled", "public"."zones"."errorReportsEnabled", "public"."zones"."commentsEnabled", "public"."zones"."ratingsEnabled", "public"."zones"."status", "public"."zones"."isPublished", "public"."zones"."viewCount", "public"."zones"."lastViewedAt", "public"."zones"."avgRating", "public"."zones"."createdAt", "public"."zones"."updatedAt", "public"."zones"."publishedAt", "public"."zones"."slug" FROM "public"."zones" WHERE ("public"."zones"."accessCode" = $1 AND "public"."zones"."isPublished" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."steps"."id", "public"."steps"."zoneId", "public"."steps"."type", "public"."steps"."title", "public"."steps"."content", "public"."steps"."order", "public"."steps"."isPublished", "public"."steps"."createdAt", "public"."steps"."updatedAt" FROM "public"."steps" WHERE ("public"."steps"."isPublished" = $1 AND "public"."steps"."zoneId" IN ($2)) ORDER BY "public"."steps"."order" ASC OFFSET $3
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."city", "public"."properties"."country", "public"."properties"."isPublished", "public"."properties"."hostContactName", "public"."properties"."hostContactPhone", "public"."properties"."hostContactEmail" FROM "public"."properties" WHERE "public"."properties"."id" IN ($1) OFFSET $2
 GET /api/public/zones/welcome-test 200 in 228ms
 ✓ Compiled /_not-found in 256ms (1795 modules)
 GET /apple-touch-icon.png 404 in 340ms
 GET /apple-touch-icon.png 404 in 330ms
 GET /apple-touch-icon-precomposed.png 404 in 339ms
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 73ms
Auth check - token exists: false
 GET /api/auth/me 401 in 33ms
prisma:query SELECT "public"."zones"."id", "public"."zones"."propertyId", "public"."zones"."organizationId", "public"."zones"."buildingId", "public"."zones"."name", "public"."zones"."description", "public"."zones"."icon", "public"."zones"."color", "public"."zones"."order", "public"."zones"."qrCode", "public"."zones"."accessCode", "public"."zones"."whatsappEnabled", "public"."zones"."errorReportsEnabled", "public"."zones"."commentsEnabled", "public"."zones"."ratingsEnabled", "public"."zones"."status", "public"."zones"."isPublished", "public"."zones"."viewCount", "public"."zones"."lastViewedAt", "public"."zones"."avgRating", "public"."zones"."createdAt", "public"."zones"."updatedAt", "public"."zones"."publishedAt", "public"."zones"."slug" FROM "public"."zones" WHERE ("public"."zones"."accessCode" = $1 AND "public"."zones"."isPublished" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."steps"."id", "public"."steps"."zoneId", "public"."steps"."type", "public"."steps"."title", "public"."steps"."content", "public"."steps"."order", "public"."steps"."isPublished", "public"."steps"."createdAt", "public"."steps"."updatedAt" FROM "public"."steps" WHERE ("public"."steps"."isPublished" = $1 AND "public"."steps"."zoneId" IN ($2)) ORDER BY "public"."steps"."order" ASC OFFSET $3
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."city", "public"."properties"."country", "public"."properties"."isPublished", "public"."properties"."hostContactName", "public"."properties"."hostContactPhone", "public"."properties"."hostContactEmail" FROM "public"."properties" WHERE "public"."properties"."id" IN ($1) OFFSET $2
 GET /api/public/zones/welcome-test 200 in 263ms
 ✓ Compiled in 440ms (1800 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 48ms
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 85ms
 ✓ Compiled /api/chatbot in 177ms (908 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."properties"."id", "public"."properties"."hostId", "public"."properties"."organizationId", "public"."properties"."buildingId", "public"."properties"."propertySetId", "public"."properties"."name", "public"."properties"."description", "public"."properties"."street", "public"."properties"."city", "public"."properties"."state", "public"."properties"."country", "public"."properties"."postalCode", "public"."properties"."latitude", "public"."properties"."longitude", "public"."properties"."type", "public"."properties"."bedrooms", "public"."properties"."bathrooms", "public"."properties"."maxGuests", "public"."properties"."squareMeters", "public"."properties"."defaultLanguages", "public"."properties"."isPublished", "public"."properties"."profileImage", "public"."properties"."hostContactName", "public"."properties"."hostContactPhone", "public"."properties"."hostContactEmail", "public"."properties"."hostContactLanguage", "public"."properties"."hostContactPhoto", "public"."properties"."status", "public"."properties"."createdAt", "public"."properties"."updatedAt", "public"."properties"."publishedAt", "public"."properties"."slug" FROM "public"."properties" WHERE ("public"."properties"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."zones"."id", "public"."zones"."propertyId", "public"."zones"."organizationId", "public"."zones"."buildingId", "public"."zones"."name", "public"."zones"."description", "public"."zones"."icon", "public"."zones"."color", "public"."zones"."order", "public"."zones"."qrCode", "public"."zones"."accessCode", "public"."zones"."whatsappEnabled", "public"."zones"."errorReportsEnabled", "public"."zones"."commentsEnabled", "public"."zones"."ratingsEnabled", "public"."zones"."status", "public"."zones"."isPublished", "public"."zones"."viewCount", "public"."zones"."lastViewedAt", "public"."zones"."avgRating", "public"."zones"."createdAt", "public"."zones"."updatedAt", "public"."zones"."publishedAt", "public"."zones"."slug" FROM "public"."zones" WHERE ("public"."zones"."id" = $1 AND "public"."zones"."propertyId" IN ($2)) OFFSET $3
prisma:query SELECT "public"."steps"."id", "public"."steps"."zoneId", "public"."steps"."type", "public"."steps"."title", "public"."steps"."content", "public"."steps"."order", "public"."steps"."isPublished", "public"."steps"."createdAt", "public"."steps"."updatedAt" FROM "public"."steps" WHERE "public"."steps"."zoneId" IN ($1) ORDER BY "public"."steps"."order" ASC OFFSET $2
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email", "public"."users"."phone" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
 POST /api/chatbot 200 in 961ms
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 113ms
 ✓ Compiled /api/public/zones/[zoneCode] in 105ms (989 modules)
 ✓ Compiled (991 modules)
Auth check - token exists: false
 GET /api/auth/me 401 in 243ms
prisma:query SELECT "public"."zones"."id", "public"."zones"."propertyId", "public"."zones"."organizationId", "public"."zones"."buildingId", "public"."zones"."name", "public"."zones"."description", "public"."zones"."icon", "public"."zones"."color", "public"."zones"."order", "public"."zones"."qrCode", "public"."zones"."accessCode", "public"."zones"."whatsappEnabled", "public"."zones"."errorReportsEnabled", "public"."zones"."commentsEnabled", "public"."zones"."ratingsEnabled", "public"."zones"."status", "public"."zones"."isPublished", "public"."zones"."viewCount", "public"."zones"."lastViewedAt", "public"."zones"."avgRating", "public"."zones"."createdAt", "public"."zones"."updatedAt", "public"."zones"."publishedAt", "public"."zones"."slug" FROM "public"."zones" WHERE ("public"."zones"."accessCode" = $1 AND "public"."zones"."isPublished" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."steps"."id", "public"."steps"."zoneId", "public"."steps"."type", "public"."steps"."title", "public"."steps"."content", "public"."steps"."order", "public"."steps"."isPublished", "public"."steps"."createdAt", "public"."steps"."updatedAt" FROM "public"."steps" WHERE ("public"."steps"."isPublished" = $1 AND "public"."steps"."zoneId" IN ($2)) ORDER BY "public"."steps"."order" ASC OFFSET $3
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."city", "public"."properties"."country", "public"."properties"."isPublished", "public"."properties"."hostContactName", "public"."properties"."hostContactPhone", "public"."properties"."hostContactEmail" FROM "public"."properties" WHERE "public"."properties"."id" IN ($1) OFFSET $2
 GET /api/public/zones/welcome-test 200 in 1321ms
prisma:query SELECT 1
prisma:query SELECT "public"."properties"."id", "public"."properties"."hostId", "public"."properties"."organizationId", "public"."properties"."buildingId", "public"."properties"."propertySetId", "public"."properties"."name", "public"."properties"."description", "public"."properties"."street", "public"."properties"."city", "public"."properties"."state", "public"."properties"."country", "public"."properties"."postalCode", "public"."properties"."latitude", "public"."properties"."longitude", "public"."properties"."type", "public"."properties"."bedrooms", "public"."properties"."bathrooms", "public"."properties"."maxGuests", "public"."properties"."squareMeters", "public"."properties"."defaultLanguages", "public"."properties"."isPublished", "public"."properties"."profileImage", "public"."properties"."hostContactName", "public"."properties"."hostContactPhone", "public"."properties"."hostContactEmail", "public"."properties"."hostContactLanguage", "public"."properties"."hostContactPhoto", "public"."properties"."status", "public"."properties"."createdAt", "public"."properties"."updatedAt", "public"."properties"."publishedAt", "public"."properties"."slug" FROM "public"."properties" WHERE ("public"."properties"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."zones"."id", "public"."zones"."propertyId", "public"."zones"."organizationId", "public"."zones"."buildingId", "public"."zones"."name", "public"."zones"."description", "public"."zones"."icon", "public"."zones"."color", "public"."zones"."order", "public"."zones"."qrCode", "public"."zones"."accessCode", "public"."zones"."whatsappEnabled", "public"."zones"."errorReportsEnabled", "public"."zones"."commentsEnabled", "public"."zones"."ratingsEnabled", "public"."zones"."status", "public"."zones"."isPublished", "public"."zones"."viewCount", "public"."zones"."lastViewedAt", "public"."zones"."avgRating", "public"."zones"."createdAt", "public"."zones"."updatedAt", "public"."zones"."publishedAt", "public"."zones"."slug" FROM "public"."zones" WHERE ("public"."zones"."id" = $1 AND "public"."zones"."propertyId" IN ($2)) OFFSET $3
prisma:query SELECT "public"."steps"."id", "public"."steps"."zoneId", "public"."steps"."type", "public"."steps"."title", "public"."steps"."content", "public"."steps"."order", "public"."steps"."isPublished", "public"."steps"."createdAt", "public"."steps"."updatedAt" FROM "public"."steps" WHERE "public"."steps"."zoneId" IN ($1) ORDER BY "public"."steps"."order" ASC OFFSET $2
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email", "public"."users"."phone" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
 POST /api/chatbot 200 in 779ms
 ✓ Compiled in 564ms (1791 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 347ms
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 10ms
 ✓ Compiled in 406ms (1697 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 36ms
 ✓ Compiled in 301ms (1697 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 65ms
 ✓ Compiled in 239ms (1697 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 43ms
 ✓ Compiled /api/admin/logs/export in 304ms (1701 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at" FROM "public"."admin_activity_log" WHERE 1=1 ORDER BY "public"."admin_activity_log"."created_at" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
 GET /api/admin/logs/export?format=csv&limit=5 200 in 739ms
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at" FROM "public"."admin_activity_log" WHERE 1=1 ORDER BY "public"."admin_activity_log"."created_at" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
 GET /api/admin/logs/export?format=json&limit=2 200 in 739ms
 ✓ Compiled in 484ms (1715 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 45ms
 ✓ Compiled in 439ms (1697 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 68ms
 ✓ Compiled in 222ms (1697 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 35ms
 ✓ Compiled in 273ms (1697 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 34ms
 ✓ Compiled in 222ms (1697 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 39ms
 ✓ Compiled in 353ms (1697 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 41ms
 ✓ Compiled in 224ms (1697 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 34ms
 ✓ Compiled in 231ms (807 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 33ms
 ✓ Compiled in 193ms (807 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 24ms
 ✓ Compiled in 226ms (807 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 27ms
 ✓ Compiled in 139ms (807 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 15ms
 ✓ Compiled in 139ms (807 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 11ms
 ✓ Compiled in 137ms (807 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 12ms
 ✓ Compiled in 137ms (807 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 10ms
 ✓ Compiled in 238ms (807 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 16ms
 ✓ Compiled in 150ms (807 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 10ms
 GET /admin/logs 200 in 75ms
 ✓ Compiled /api/admin/dashboard-stats in 244ms (908 modules)
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."properties"."id" FROM "public"."properties" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE "public"."users"."isActive" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at" FROM "public"."admin_activity_log" WHERE 1=1 ORDER BY "public"."admin_activity_log"."created_at" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
 GET /api/admin/dashboard-stats 200 in 1222ms
 ✓ Compiled /api/admin/logs/export in 143ms (910 modules)
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at" FROM "public"."admin_activity_log" WHERE 1=1 ORDER BY "public"."admin_activity_log"."created_at" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
 GET /api/admin/logs/export?format=json&limit=2 200 in 291ms
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 97ms
 GET /admin 200 in 76ms
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."properties"."id" FROM "public"."properties" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE "public"."users"."isActive" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at" FROM "public"."admin_activity_log" WHERE 1=1 ORDER BY "public"."admin_activity_log"."created_at" DESC LIMIT $1 OFFSET $2
 ✓ Compiled /api/auth/me in 249ms (989 modules)
Auth check - token exists: false
 GET /api/auth/me 401 in 307ms
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
 GET /api/admin/dashboard-stats 200 in 346ms
 GET /admin/logs 200 in 58ms
 ✓ Compiled /api/admin/logs in 180ms (991 modules)
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at" FROM "public"."admin_activity_log" WHERE 1=1 ORDER BY "public"."admin_activity_log"."created_at" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."admin_activity_log"."id" FROM "public"."admin_activity_log" WHERE 1=1 OFFSET $1) AS "sub"
 GET /api/admin/logs? 200 in 451ms
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at" FROM "public"."admin_activity_log" WHERE 1=1 ORDER BY "public"."admin_activity_log"."created_at" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."admin_activity_log"."id" FROM "public"."admin_activity_log" WHERE 1=1 OFFSET $1) AS "sub"
 GET /api/admin/logs? 200 in 199ms
 GET /admin/users 200 in 44ms
 ✓ Compiled /api/admin/users in 168ms (993 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."users"."id", "public"."users"."email", "public"."users"."name", "public"."users"."phone", "public"."users"."password", "public"."users"."emailVerified", "public"."users"."phoneVerified", "public"."users"."preferredLanguage", "public"."users"."timezone", "public"."users"."role", "public"."users"."status", "public"."users"."subscription", "public"."users"."createdAt", "public"."users"."updatedAt", "public"."users"."lastLoginAt", "public"."users"."avatar", "public"."users"."isAdmin", "public"."users"."isActive", "public"."users"."companyName", "public"."users"."notes", "public"."users"."createdBy" FROM "public"."users" WHERE 1=1 ORDER BY "public"."users"."createdAt" DESC OFFSET $1
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."hostId" FROM "public"."properties" WHERE "public"."properties"."hostId" IN ($1) OFFSET $2
prisma:query SELECT "public"."user_subscriptions"."id", "public"."user_subscriptions"."user_id", "public"."user_subscriptions"."plan_id", "public"."user_subscriptions"."status", "public"."user_subscriptions"."custom_price", "public"."user_subscriptions"."discount_percentage", "public"."user_subscriptions"."discount_reason", "public"."user_subscriptions"."start_date", "public"."user_subscriptions"."end_date", "public"."user_subscriptions"."notes", "public"."user_subscriptions"."created_by", "public"."user_subscriptions"."created_at", "public"."user_subscriptions"."updated_at" FROM "public"."user_subscriptions" WHERE ("public"."user_subscriptions"."status" = $1 AND "public"."user_subscriptions"."user_id" IN ($2)) ORDER BY "public"."user_subscriptions"."created_at" DESC LIMIT $3 OFFSET $4
 GET /api/admin/users 200 in 638ms
prisma:query SELECT "public"."users"."id", "public"."users"."email", "public"."users"."name", "public"."users"."phone", "public"."users"."password", "public"."users"."emailVerified", "public"."users"."phoneVerified", "public"."users"."preferredLanguage", "public"."users"."timezone", "public"."users"."role", "public"."users"."status", "public"."users"."subscription", "public"."users"."createdAt", "public"."users"."updatedAt", "public"."users"."lastLoginAt", "public"."users"."avatar", "public"."users"."isAdmin", "public"."users"."isActive", "public"."users"."companyName", "public"."users"."notes", "public"."users"."createdBy" FROM "public"."users" WHERE 1=1 ORDER BY "public"."users"."createdAt" DESC OFFSET $1
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."hostId" FROM "public"."properties" WHERE "public"."properties"."hostId" IN ($1) OFFSET $2
prisma:query SELECT "public"."user_subscriptions"."id", "public"."user_subscriptions"."user_id", "public"."user_subscriptions"."plan_id", "public"."user_subscriptions"."status", "public"."user_subscriptions"."custom_price", "public"."user_subscriptions"."discount_percentage", "public"."user_subscriptions"."discount_reason", "public"."user_subscriptions"."start_date", "public"."user_subscriptions"."end_date", "public"."user_subscriptions"."notes", "public"."user_subscriptions"."created_by", "public"."user_subscriptions"."created_at", "public"."user_subscriptions"."updated_at" FROM "public"."user_subscriptions" WHERE ("public"."user_subscriptions"."status" = $1 AND "public"."user_subscriptions"."user_id" IN ($2)) ORDER BY "public"."user_subscriptions"."created_at" DESC LIMIT $3 OFFSET $4
 GET /api/admin/users 200 in 195ms
 GET /admin/properties 200 in 39ms
 ✓ Compiled /api/admin/properties in 177ms (995 modules)
prisma:query SELECT "public"."properties"."id", "public"."properties"."hostId", "public"."properties"."organizationId", "public"."properties"."buildingId", "public"."properties"."propertySetId", "public"."properties"."name", "public"."properties"."description", "public"."properties"."street", "public"."properties"."city", "public"."properties"."state", "public"."properties"."country", "public"."properties"."postalCode", "public"."properties"."latitude", "public"."properties"."longitude", "public"."properties"."type", "public"."properties"."bedrooms", "public"."properties"."bathrooms", "public"."properties"."maxGuests", "public"."properties"."squareMeters", "public"."properties"."defaultLanguages", "public"."properties"."isPublished", "public"."properties"."profileImage", "public"."properties"."hostContactName", "public"."properties"."hostContactPhone", "public"."properties"."hostContactEmail", "public"."properties"."hostContactLanguage", "public"."properties"."hostContactPhoto", "public"."properties"."status", "public"."properties"."createdAt", "public"."properties"."updatedAt", "public"."properties"."publishedAt", "public"."properties"."slug" FROM "public"."properties" WHERE 1=1 ORDER BY "public"."properties"."createdAt" DESC OFFSET $1
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."zones"."id", "public"."zones"."name", "public"."zones"."propertyId" FROM "public"."zones" WHERE "public"."zones"."propertyId" IN ($1) OFFSET $2
 GET /api/admin/properties 200 in 581ms
prisma:query SELECT "public"."properties"."id", "public"."properties"."hostId", "public"."properties"."organizationId", "public"."properties"."buildingId", "public"."properties"."propertySetId", "public"."properties"."name", "public"."properties"."description", "public"."properties"."street", "public"."properties"."city", "public"."properties"."state", "public"."properties"."country", "public"."properties"."postalCode", "public"."properties"."latitude", "public"."properties"."longitude", "public"."properties"."type", "public"."properties"."bedrooms", "public"."properties"."bathrooms", "public"."properties"."maxGuests", "public"."properties"."squareMeters", "public"."properties"."defaultLanguages", "public"."properties"."isPublished", "public"."properties"."profileImage", "public"."properties"."hostContactName", "public"."properties"."hostContactPhone", "public"."properties"."hostContactEmail", "public"."properties"."hostContactLanguage", "public"."properties"."hostContactPhoto", "public"."properties"."status", "public"."properties"."createdAt", "public"."properties"."updatedAt", "public"."properties"."publishedAt", "public"."properties"."slug" FROM "public"."properties" WHERE 1=1 ORDER BY "public"."properties"."createdAt" DESC OFFSET $1
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."zones"."id", "public"."zones"."name", "public"."zones"."propertyId" FROM "public"."zones" WHERE "public"."zones"."propertyId" IN ($1) OFFSET $2
 GET /api/admin/properties 200 in 214ms
 ✓ Compiled in 659ms (1791 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /admin/properties 200 in 383ms
 GET /z/welcome-test 200 in 377ms
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 16ms
 GET /admin/properties 200 in 21ms
 ✓ Compiled in 580ms (1791 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /admin/properties 200 in 368ms
 GET /z/welcome-test 200 in 364ms
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /admin/properties 200 in 33ms
 GET /z/welcome-test 200 in 28ms
 ✓ Compiled in 59ms (793 modules)
 ✓ Compiled in 473ms (1697 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /admin/properties 200 in 60ms
 GET /z/welcome-test 200 in 63ms
 ✓ Compiled /api/admin/properties in 124ms (908 modules)
prisma:query SELECT "public"."properties"."id", "public"."properties"."hostId", "public"."properties"."organizationId", "public"."properties"."buildingId", "public"."properties"."propertySetId", "public"."properties"."name", "public"."properties"."description", "public"."properties"."street", "public"."properties"."city", "public"."properties"."state", "public"."properties"."country", "public"."properties"."postalCode", "public"."properties"."latitude", "public"."properties"."longitude", "public"."properties"."type", "public"."properties"."bedrooms", "public"."properties"."bathrooms", "public"."properties"."maxGuests", "public"."properties"."squareMeters", "public"."properties"."defaultLanguages", "public"."properties"."isPublished", "public"."properties"."profileImage", "public"."properties"."hostContactName", "public"."properties"."hostContactPhone", "public"."properties"."hostContactEmail", "public"."properties"."hostContactLanguage", "public"."properties"."hostContactPhoto", "public"."properties"."status", "public"."properties"."createdAt", "public"."properties"."updatedAt", "public"."properties"."publishedAt", "public"."properties"."slug" FROM "public"."properties" WHERE 1=1 ORDER BY "public"."properties"."createdAt" DESC OFFSET $1
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."zones"."id", "public"."zones"."name", "public"."zones"."propertyId" FROM "public"."zones" WHERE "public"."zones"."propertyId" IN ($1) OFFSET $2
 GET /api/admin/properties 200 in 1239ms
 ✓ Compiled /api/public/zones/[zoneCode] in 581ms (1715 modules)
 ✓ Compiled in 0ms (910 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /admin/properties 200 in 300ms
 GET /z/welcome-test 200 in 284ms
prisma:query SELECT 1
prisma:query SELECT "public"."zones"."id", "public"."zones"."propertyId", "public"."zones"."organizationId", "public"."zones"."buildingId", "public"."zones"."name", "public"."zones"."description", "public"."zones"."icon", "public"."zones"."color", "public"."zones"."order", "public"."zones"."qrCode", "public"."zones"."accessCode", "public"."zones"."whatsappEnabled", "public"."zones"."errorReportsEnabled", "public"."zones"."commentsEnabled", "public"."zones"."ratingsEnabled", "public"."zones"."status", "public"."zones"."isPublished", "public"."zones"."viewCount", "public"."zones"."lastViewedAt", "public"."zones"."avgRating", "public"."zones"."createdAt", "public"."zones"."updatedAt", "public"."zones"."publishedAt", "public"."zones"."slug" FROM "public"."zones" WHERE ("public"."zones"."accessCode" = $1 AND "public"."zones"."isPublished" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."steps"."id", "public"."steps"."zoneId", "public"."steps"."type", "public"."steps"."title", "public"."steps"."content", "public"."steps"."order", "public"."steps"."isPublished", "public"."steps"."createdAt", "public"."steps"."updatedAt" FROM "public"."steps" WHERE ("public"."steps"."isPublished" = $1 AND "public"."steps"."zoneId" IN ($2)) ORDER BY "public"."steps"."order" ASC OFFSET $3
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."city", "public"."properties"."country", "public"."properties"."isPublished", "public"."properties"."hostContactName", "public"."properties"."hostContactPhone", "public"."properties"."hostContactEmail" FROM "public"."properties" WHERE "public"."properties"."id" IN ($1) OFFSET $2
 GET /api/public/zones/welcome-test 200 in 942ms
 ✓ Compiled /api/admin/analytics in 139ms (1705 modules)
prisma:query UPDATE "public"."zones" SET "viewCount" = ("public"."zones"."viewCount" + $1), "lastViewedAt" = $2, "updatedAt" = $3 WHERE ("public"."zones"."id" = $4 AND 1=1) RETURNING "public"."zones"."id", "public"."zones"."propertyId", "public"."zones"."organizationId", "public"."zones"."buildingId", "public"."zones"."name", "public"."zones"."description", "public"."zones"."icon", "public"."zones"."color", "public"."zones"."order", "public"."zones"."qrCode", "public"."zones"."accessCode", "public"."zones"."whatsappEnabled", "public"."zones"."errorReportsEnabled", "public"."zones"."commentsEnabled", "public"."zones"."ratingsEnabled", "public"."zones"."status", "public"."zones"."isPublished", "public"."zones"."viewCount", "public"."zones"."lastViewedAt", "public"."zones"."avgRating", "public"."zones"."createdAt", "public"."zones"."updatedAt", "public"."zones"."publishedAt", "public"."zones"."slug"
 POST /api/admin/analytics 200 in 313ms
 ✓ Compiled in 501ms (1717 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /admin/properties 200 in 53ms
 GET /z/welcome-test 200 in 60ms
 ✓ Compiled in 380ms (1717 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /admin/properties 200 in 60ms
 GET /z/welcome-test 200 in 60ms
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 85ms
prisma:query SELECT 1
prisma:query SELECT "public"."zones"."id", "public"."zones"."name", "public"."zones"."viewCount", "public"."zones"."lastViewedAt", "public"."zones"."propertyId" FROM "public"."zones" WHERE "public"."zones"."lastViewedAt" >= $1 ORDER BY "public"."zones"."viewCount" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."city", "public"."properties"."country" FROM "public"."properties" WHERE "public"."properties"."id" IN ($1) OFFSET $2
prisma:query 
        SELECT 
          DATE(COALESCE("lastViewedAt", "createdAt")) as date,
          COUNT(*) as visits,
          SUM("viewCount") as total_views
        FROM "zones" 
        WHERE COALESCE("lastViewedAt", "createdAt") >= $1
        GROUP BY DATE(COALESCE("lastViewedAt", "createdAt"))
        ORDER BY date ASC
      
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."created_at", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."target_id" FROM "public"."admin_activity_log" WHERE ("public"."admin_activity_log"."action" = $1 AND "public"."admin_activity_log"."created_at" >= $2) ORDER BY "public"."admin_activity_log"."created_at" DESC OFFSET $3
prisma:query 
        SELECT 
          DATE("created_at") as date,
          COUNT(*) as interactions
        FROM "admin_activity_log" 
        WHERE "action" = 'chatbot_interaction' 
        AND "created_at" >= $1
        GROUP BY DATE("created_at")
        ORDER BY date ASC
      
prisma:query 
        SELECT 
          DATE("createdAt") as date,
          COUNT(*) as new_users,
          COUNT(CASE WHEN "isActive" = true THEN 1 END) as active_users
        FROM "users" 
        WHERE "createdAt" >= $1
        GROUP BY DATE("createdAt")
        ORDER BY date ASC
      
prisma:query SELECT COUNT("id") FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE "public"."users"."createdAt" >= $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE ("public"."users"."isActive" = $1 AND "public"."users"."lastLoginAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."city", "public"."properties"."country", "public"."properties"."isPublished", "public"."properties"."createdAt" FROM "public"."properties" WHERE "public"."properties"."createdAt" >= $1 OFFSET $2
prisma:query SELECT "public"."zones"."id", "public"."zones"."viewCount", "public"."zones"."propertyId" FROM "public"."zones" WHERE "public"."zones"."propertyId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."zones"."id" FROM "public"."zones" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."properties"."id" FROM "public"."properties" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT SUM("viewCount") FROM (SELECT "public"."zones"."viewCount" FROM "public"."zones" WHERE 1=1 OFFSET $1) AS "sub"
Error fetching analytics: TypeError: Do not know how to serialize a BigInt
    at JSON.stringify (<anonymous>)
    at GET (app/api/admin/analytics/route.ts:216:24)
  214 |     analytics.performance = performanceMetrics;
  215 |
> 216 |     return NextResponse.json({
      |                        ^
  217 |       success: true,
  218 |       timeframe,
  219 |       analytics
 GET /api/admin/analytics?timeframe=7d&metric=all 500 in 2227ms
prisma:query SELECT "public"."zones"."id", "public"."zones"."name", "public"."zones"."viewCount", "public"."zones"."lastViewedAt", "public"."zones"."propertyId" FROM "public"."zones" WHERE "public"."zones"."lastViewedAt" >= $1 ORDER BY "public"."zones"."viewCount" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."city", "public"."properties"."country" FROM "public"."properties" WHERE "public"."properties"."id" IN ($1) OFFSET $2
prisma:query 
        SELECT 
          DATE(COALESCE("lastViewedAt", "createdAt")) as date,
          COUNT(*) as visits,
          SUM("viewCount") as total_views
        FROM "zones" 
        WHERE COALESCE("lastViewedAt", "createdAt") >= $1
        GROUP BY DATE(COALESCE("lastViewedAt", "createdAt"))
        ORDER BY date ASC
      
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."created_at", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."target_id" FROM "public"."admin_activity_log" WHERE ("public"."admin_activity_log"."action" = $1 AND "public"."admin_activity_log"."created_at" >= $2) ORDER BY "public"."admin_activity_log"."created_at" DESC OFFSET $3
prisma:query 
        SELECT 
          DATE("created_at") as date,
          COUNT(*) as interactions
        FROM "admin_activity_log" 
        WHERE "action" = 'chatbot_interaction' 
        AND "created_at" >= $1
        GROUP BY DATE("created_at")
        ORDER BY date ASC
      
prisma:query 
        SELECT 
          DATE("createdAt") as date,
          COUNT(*) as new_users,
          COUNT(CASE WHEN "isActive" = true THEN 1 END) as active_users
        FROM "users" 
        WHERE "createdAt" >= $1
        GROUP BY DATE("createdAt")
        ORDER BY date ASC
      
prisma:query SELECT COUNT("id") FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE "public"."users"."createdAt" >= $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE ("public"."users"."isActive" = $1 AND "public"."users"."lastLoginAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."city", "public"."properties"."country", "public"."properties"."isPublished", "public"."properties"."createdAt" FROM "public"."properties" WHERE "public"."properties"."createdAt" >= $1 OFFSET $2
prisma:query SELECT "public"."zones"."id", "public"."zones"."viewCount", "public"."zones"."propertyId" FROM "public"."zones" WHERE "public"."zones"."propertyId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."zones"."id" FROM "public"."zones" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."properties"."id" FROM "public"."properties" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT SUM("viewCount") FROM (SELECT "public"."zones"."viewCount" FROM "public"."zones" WHERE 1=1 OFFSET $1) AS "sub"
Error fetching analytics: TypeError: Do not know how to serialize a BigInt
    at JSON.stringify (<anonymous>)
    at GET (app/api/admin/analytics/route.ts:216:24)
  214 |     analytics.performance = performanceMetrics;
  215 |
> 216 |     return NextResponse.json({
      |                        ^
  217 |       success: true,
  218 |       timeframe,
  219 |       analytics
 GET /api/admin/analytics?timeframe=7d&metric=all 500 in 996ms
prisma:query SELECT "public"."zones"."id", "public"."zones"."name", "public"."zones"."viewCount", "public"."zones"."lastViewedAt", "public"."zones"."propertyId" FROM "public"."zones" WHERE "public"."zones"."lastViewedAt" >= $1 ORDER BY "public"."zones"."viewCount" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."city", "public"."properties"."country" FROM "public"."properties" WHERE "public"."properties"."id" IN ($1) OFFSET $2
prisma:query 
        SELECT 
          DATE(COALESCE("lastViewedAt", "createdAt")) as date,
          COUNT(*) as visits,
          SUM("viewCount") as total_views
        FROM "zones" 
        WHERE COALESCE("lastViewedAt", "createdAt") >= $1
        GROUP BY DATE(COALESCE("lastViewedAt", "createdAt"))
        ORDER BY date ASC
      
prisma:query SELECT 1
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."created_at", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."target_id" FROM "public"."admin_activity_log" WHERE ("public"."admin_activity_log"."action" = $1 AND "public"."admin_activity_log"."created_at" >= $2) ORDER BY "public"."admin_activity_log"."created_at" DESC OFFSET $3
prisma:query 
        SELECT 
          DATE("created_at") as date,
          COUNT(*) as interactions
        FROM "admin_activity_log" 
        WHERE "action" = 'chatbot_interaction' 
        AND "created_at" >= $1
        GROUP BY DATE("created_at")
        ORDER BY date ASC
      
prisma:query 
        SELECT 
          DATE("createdAt") as date,
          COUNT(*) as new_users,
          COUNT(CASE WHEN "isActive" = true THEN 1 END) as active_users
        FROM "users" 
        WHERE "createdAt" >= $1
        GROUP BY DATE("createdAt")
        ORDER BY date ASC
      
prisma:query SELECT COUNT("id") FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE "public"."users"."createdAt" >= $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE ("public"."users"."isActive" = $1 AND "public"."users"."lastLoginAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."city", "public"."properties"."country", "public"."properties"."isPublished", "public"."properties"."createdAt" FROM "public"."properties" WHERE "public"."properties"."createdAt" >= $1 OFFSET $2
prisma:query SELECT "public"."zones"."id", "public"."zones"."viewCount", "public"."zones"."propertyId" FROM "public"."zones" WHERE "public"."zones"."propertyId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."zones"."id" FROM "public"."zones" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."properties"."id" FROM "public"."properties" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT SUM("viewCount") FROM (SELECT "public"."zones"."viewCount" FROM "public"."zones" WHERE 1=1 OFFSET $1) AS "sub"
Error fetching analytics: TypeError: Do not know how to serialize a BigInt
    at JSON.stringify (<anonymous>)
    at GET (app/api/admin/analytics/route.ts:216:24)
  214 |     analytics.performance = performanceMetrics;
  215 |
> 216 |     return NextResponse.json({
      |                        ^
  217 |       success: true,
  218 |       timeframe,
  219 |       analytics
 GET /api/admin/analytics?timeframe=7d&metric=all 500 in 1057ms
 ✓ Compiled in 420ms (1715 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /admin/properties 200 in 62ms
 GET /z/welcome-test 200 in 60ms
 ✓ Compiled in 218ms (1715 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /admin/properties 200 in 36ms
 GET /z/welcome-test 200 in 35ms
 ✓ Compiled in 275ms (1715 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /admin/properties 200 in 66ms
 GET /z/welcome-test 200 in 68ms
 ✓ Compiled in 306ms (1715 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /admin/properties 200 in 36ms
 GET /z/welcome-test 200 in 39ms
prisma:query SELECT 1
prisma:query SELECT "public"."zones"."id", "public"."zones"."name", "public"."zones"."viewCount", "public"."zones"."lastViewedAt", "public"."zones"."propertyId" FROM "public"."zones" WHERE "public"."zones"."lastViewedAt" >= $1 ORDER BY "public"."zones"."viewCount" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."city", "public"."properties"."country" FROM "public"."properties" WHERE "public"."properties"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."zones"."id", "public"."zones"."viewCount", "public"."zones"."lastViewedAt", "public"."zones"."createdAt" FROM "public"."zones" WHERE ("public"."zones"."lastViewedAt" >= $1 OR "public"."zones"."createdAt" >= $2) OFFSET $3
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."created_at", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."target_id" FROM "public"."admin_activity_log" WHERE ("public"."admin_activity_log"."action" = $1 AND "public"."admin_activity_log"."created_at" >= $2) ORDER BY "public"."admin_activity_log"."created_at" DESC OFFSET $3
prisma:query SELECT "public"."users"."id", "public"."users"."createdAt", "public"."users"."isActive" FROM "public"."users" WHERE "public"."users"."createdAt" >= $1 OFFSET $2
prisma:query SELECT COUNT("id") FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE "public"."users"."createdAt" >= $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE ("public"."users"."isActive" = $1 AND "public"."users"."lastLoginAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."city", "public"."properties"."country", "public"."properties"."isPublished", "public"."properties"."createdAt" FROM "public"."properties" WHERE "public"."properties"."createdAt" >= $1 OFFSET $2
prisma:query SELECT "public"."zones"."id", "public"."zones"."viewCount", "public"."zones"."propertyId" FROM "public"."zones" WHERE "public"."zones"."propertyId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."zones"."id" FROM "public"."zones" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."properties"."id" FROM "public"."properties" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT SUM("viewCount") FROM (SELECT "public"."zones"."viewCount" FROM "public"."zones" WHERE 1=1 OFFSET $1) AS "sub"
 GET /api/admin/analytics?timeframe=7d&metric=all 200 in 1116ms
prisma:query SELECT "public"."zones"."id", "public"."zones"."name", "public"."zones"."viewCount", "public"."zones"."lastViewedAt", "public"."zones"."propertyId" FROM "public"."zones" WHERE "public"."zones"."lastViewedAt" >= $1 ORDER BY "public"."zones"."viewCount" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."city", "public"."properties"."country" FROM "public"."properties" WHERE "public"."properties"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."zones"."id", "public"."zones"."viewCount", "public"."zones"."lastViewedAt", "public"."zones"."createdAt" FROM "public"."zones" WHERE ("public"."zones"."lastViewedAt" >= $1 OR "public"."zones"."createdAt" >= $2) OFFSET $3
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."created_at", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."target_id" FROM "public"."admin_activity_log" WHERE ("public"."admin_activity_log"."action" = $1 AND "public"."admin_activity_log"."created_at" >= $2) ORDER BY "public"."admin_activity_log"."created_at" DESC OFFSET $3
prisma:query SELECT "public"."users"."id", "public"."users"."createdAt", "public"."users"."isActive" FROM "public"."users" WHERE "public"."users"."createdAt" >= $1 OFFSET $2
prisma:query SELECT COUNT("id") FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE "public"."users"."createdAt" >= $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE ("public"."users"."isActive" = $1 AND "public"."users"."lastLoginAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."city", "public"."properties"."country", "public"."properties"."isPublished", "public"."properties"."createdAt" FROM "public"."properties" WHERE "public"."properties"."createdAt" >= $1 OFFSET $2
prisma:query SELECT "public"."zones"."id", "public"."zones"."viewCount", "public"."zones"."propertyId" FROM "public"."zones" WHERE "public"."zones"."propertyId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."zones"."id" FROM "public"."zones" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."properties"."id" FROM "public"."properties" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT SUM("viewCount") FROM (SELECT "public"."zones"."viewCount" FROM "public"."zones" WHERE 1=1 OFFSET $1) AS "sub"
 GET /api/admin/analytics?timeframe=7d&metric=all 200 in 925ms
 ○ Compiling /admin/analytics ...
 ✓ Compiled /admin/analytics in 1607ms (2600 modules)
 GET /admin/analytics 200 in 1791ms
prisma:query SELECT 1
prisma:query UPDATE "public"."zones" SET "viewCount" = ("public"."zones"."viewCount" + $1), "lastViewedAt" = $2, "updatedAt" = $3 WHERE ("public"."zones"."id" = $4 AND 1=1) RETURNING "public"."zones"."id", "public"."zones"."propertyId", "public"."zones"."organizationId", "public"."zones"."buildingId", "public"."zones"."name", "public"."zones"."description", "public"."zones"."icon", "public"."zones"."color", "public"."zones"."order", "public"."zones"."qrCode", "public"."zones"."accessCode", "public"."zones"."whatsappEnabled", "public"."zones"."errorReportsEnabled", "public"."zones"."commentsEnabled", "public"."zones"."ratingsEnabled", "public"."zones"."status", "public"."zones"."isPublished", "public"."zones"."viewCount", "public"."zones"."lastViewedAt", "public"."zones"."avgRating", "public"."zones"."createdAt", "public"."zones"."updatedAt", "public"."zones"."publishedAt", "public"."zones"."slug"
Error tracking event: Error [PrismaClientKnownRequestError]: 
Invalid `prisma.zone.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. No record was found for an update.
    at async POST (app/api/admin/analytics/route.ts:274:10)
  272 |         // Update zone view count
  273 |         if (data.zoneId) {
> 274 |           await prisma.zone.update({
      |          ^
  275 |             where: { id: data.zoneId },
  276 |             data: {
  277 |               viewCount: { {
  code: 'P2025',
  meta: [Object],
  clientVersion: '6.9.0'
}
 POST /api/admin/analytics 500 in 214ms
 ✓ Compiled in 716ms (2239 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /admin/properties 200 in 418ms
 GET /z/welcome-test 200 in 416ms
 ⚠ Unsupported metadata viewport is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 ⚠ Unsupported metadata themeColor is configured in metadata export in /z/welcome-test. Please move it to viewport export instead.
Read more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport
 GET /z/welcome-test 200 in 28ms
 GET /admin/properties 200 in 26ms
 ✓ Compiled in 393ms (1255 modules)
 ✓ Compiled in 156ms (1255 modules)
 ✓ Compiled in 257ms (1255 modules)
 ✓ Compiled in 164ms (1255 modules)
 ✓ Compiled in 256ms (1255 modules)
 ✓ Compiled in 172ms (1255 modules)
 ✓ Compiled in 145ms (1255 modules)
 ✓ Compiled in 206ms (1255 modules)
 ✓ Compiled in 137ms (1255 modules)
 ✓ Compiled in 237ms (2239 modules)
 ✓ Compiled in 142ms (1255 modules)
 ✓ Compiled in 140ms (1255 modules)
 ✓ Compiled in 176ms (1255 modules)
 ✓ Compiled in 143ms (1255 modules)
 ✓ Compiled in 139ms (1255 modules)
 ✓ Compiled in 304ms (1255 modules)
 ✓ Compiled in 162ms (1255 modules)
 ✓ Compiled in 140ms (1255 modules)
 GET /admin/users 200 in 73ms
 ✓ Compiled /api/admin/users in 291ms (908 modules)
 GET /admin 200 in 27ms
prisma:query SELECT "public"."users"."id", "public"."users"."email", "public"."users"."name", "public"."users"."phone", "public"."users"."password", "public"."users"."emailVerified", "public"."users"."phoneVerified", "public"."users"."preferredLanguage", "public"."users"."timezone", "public"."users"."role", "public"."users"."status", "public"."users"."subscription", "public"."users"."createdAt", "public"."users"."updatedAt", "public"."users"."lastLoginAt", "public"."users"."avatar", "public"."users"."isAdmin", "public"."users"."isActive", "public"."users"."companyName", "public"."users"."notes", "public"."users"."createdBy" FROM "public"."users" WHERE 1=1 ORDER BY "public"."users"."createdAt" DESC OFFSET $1
 ✓ Compiled /api/admin/dashboard-stats in 179ms (910 modules)
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."hostId" FROM "public"."properties" WHERE "public"."properties"."hostId" IN ($1) OFFSET $2
prisma:query SELECT "public"."user_subscriptions"."id", "public"."user_subscriptions"."user_id", "public"."user_subscriptions"."plan_id", "public"."user_subscriptions"."status", "public"."user_subscriptions"."custom_price", "public"."user_subscriptions"."discount_percentage", "public"."user_subscriptions"."discount_reason", "public"."user_subscriptions"."start_date", "public"."user_subscriptions"."end_date", "public"."user_subscriptions"."notes", "public"."user_subscriptions"."created_by", "public"."user_subscriptions"."created_at", "public"."user_subscriptions"."updated_at" FROM "public"."user_subscriptions" WHERE ("public"."user_subscriptions"."status" = $1 AND "public"."user_subscriptions"."user_id" IN ($2)) ORDER BY "public"."user_subscriptions"."created_at" DESC LIMIT $3 OFFSET $4
 GET /api/admin/users 200 in 1624ms
prisma:query SELECT "public"."users"."id", "public"."users"."email", "public"."users"."name", "public"."users"."phone", "public"."users"."password", "public"."users"."emailVerified", "public"."users"."phoneVerified", "public"."users"."preferredLanguage", "public"."users"."timezone", "public"."users"."role", "public"."users"."status", "public"."users"."subscription", "public"."users"."createdAt", "public"."users"."updatedAt", "public"."users"."lastLoginAt", "public"."users"."avatar", "public"."users"."isAdmin", "public"."users"."isActive", "public"."users"."companyName", "public"."users"."notes", "public"."users"."createdBy" FROM "public"."users" WHERE 1=1 ORDER BY "public"."users"."createdAt" DESC OFFSET $1
 GET /admin/properties 200 in 27ms
prisma:query SELECT "public"."properties"."id", "public"."properties"."name", "public"."properties"."hostId" FROM "public"."properties" WHERE "public"."properties"."hostId" IN ($1) OFFSET $2
 GET /api/admin/users 200 in 253ms
prisma:query SELECT "public"."user_subscriptions"."id", "public"."user_subscriptions"."user_id", "public"."user_subscriptions"."plan_id", "public"."user_subscriptions"."status", "public"."user_subscriptions"."custom_price", "public"."user_subscriptions"."discount_percentage", "public"."user_subscriptions"."discount_reason", "public"."user_subscriptions"."start_date", "public"."user_subscriptions"."end_date", "public"."user_subscriptions"."notes", "public"."user_subscriptions"."created_by", "public"."user_subscriptions"."created_at", "public"."user_subscriptions"."updated_at" FROM "public"."user_subscriptions" WHERE ("public"."user_subscriptions"."status" = $1 AND "public"."user_subscriptions"."user_id" IN ($2)) ORDER BY "public"."user_subscriptions"."created_at" DESC LIMIT $3 OFFSET $4
 ✓ Compiled /api/admin/properties in 175ms (912 modules)
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE "public"."users"."isActive" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."properties"."id", "public"."properties"."hostId", "public"."properties"."organizationId", "public"."properties"."buildingId", "public"."properties"."propertySetId", "public"."properties"."name", "public"."properties"."description", "public"."properties"."street", "public"."properties"."city", "public"."properties"."state", "public"."properties"."country", "public"."properties"."postalCode", "public"."properties"."latitude", "public"."properties"."longitude", "public"."properties"."type", "public"."properties"."bedrooms", "public"."properties"."bathrooms", "public"."properties"."maxGuests", "public"."properties"."squareMeters", "public"."properties"."defaultLanguages", "public"."properties"."isPublished", "public"."properties"."profileImage", "public"."properties"."hostContactName", "public"."properties"."hostContactPhone", "public"."properties"."hostContactEmail", "public"."properties"."hostContactLanguage", "public"."properties"."hostContactPhoto", "public"."properties"."status", "public"."properties"."createdAt", "public"."properties"."updatedAt", "public"."properties"."publishedAt", "public"."properties"."slug" FROM "public"."properties" WHERE 1=1 ORDER BY "public"."properties"."createdAt" DESC OFFSET $1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."properties"."id" FROM "public"."properties" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at" FROM "public"."admin_activity_log" WHERE 1=1 ORDER BY "public"."admin_activity_log"."created_at" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
 GET /api/admin/dashboard-stats 200 in 1281ms
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
 GET /api/admin/properties 200 in 668ms
prisma:query SELECT "public"."zones"."id", "public"."zones"."name", "public"."zones"."propertyId" FROM "public"."zones" WHERE "public"."zones"."propertyId" IN ($1) OFFSET $2
 ○ Compiling /admin/analytics ...
 ✓ Compiled /admin/analytics in 611ms (1363 modules)
 GET /admin/analytics 200 in 781ms
prisma:query SELECT "public"."properties"."id", "public"."properties"."hostId", "public"."properties"."organizationId", "public"."properties"."buildingId", "public"."properties"."propertySetId", "public"."properties"."name", "public"."properties"."description", "public"."properties"."street", "public"."properties"."city", "public"."properties"."state", "public"."properties"."country", "public"."properties"."postalCode", "public"."properties"."latitude", "public"."properties"."longitude", "public"."properties"."type", "public"."properties"."bedrooms", "public"."properties"."bathrooms", "public"."properties"."maxGuests", "public"."properties"."squareMeters", "public"."properties"."defaultLanguages", "public"."properties"."isPublished", "public"."properties"."profileImage", "public"."properties"."hostContactName", "public"."properties"."hostContactPhone", "public"."properties"."hostContactEmail", "public"."properties"."hostContactLanguage", "public"."properties"."hostContactPhoto", "public"."properties"."status", "public"."properties"."createdAt", "public"."properties"."updatedAt", "public"."properties"."publishedAt", "public"."properties"."slug" FROM "public"."properties" WHERE 1=1 ORDER BY "public"."properties"."createdAt" DESC OFFSET $1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."admin_activity_log"."id", "public"."admin_activity_log"."admin_user_id", "public"."admin_activity_log"."action", "public"."admin_activity_log"."target_type", "public"."admin_activity_log"."target_id", "public"."admin_activity_log"."description", "public"."admin_activity_log"."metadata", "public"."admin_activity_log"."created_at" FROM "public"."admin_activity_log" WHERE 1=1 ORDER BY "public"."admin_activity_log"."created_at" DESC LIMIT $1 OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."properties"."id" FROM "public"."properties" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."users"."id" FROM "public"."users" WHERE "public"."users"."isActive" = $1 OFFSET $2) AS "sub"
 ✓ Compiled /admin/plans in 126ms (1371 modules)
 GET /admin/plans 200 in 166ms
prisma:query SELECT "public"."zones"."id", "public"."zones"."name", "public"."zones"."propertyId" FROM "public"."zones" WHERE "public"."zones"."propertyId" IN ($1) OFFSET $2
 GET /api/admin/properties 200 in 747ms
prisma:query SELECT "public"."users"."id", "public"."users"."name", "public"."users"."email" FROM "public"."users" WHERE "public"."users"."id" IN ($1) OFFSET $2
 GET /api/admin/dashboard-stats 200 in 845ms
 ✓ Compiled /api/admin/plans in 130ms (1373 modules)
prisma:query SELECT "public"."subscription_plans"."id", "public"."subscription_plans"."name", "public"."subscription_plans"."description", "public"."subscription_plans"."price_monthly", "public"."subscription_plans"."price_yearly", "public"."subscription_plans"."ai_messages_included", "public"."subscription_plans"."max_properties", "public"."subscription_plans"."features", "public"."subscription_plans"."is_active", "public"."subscription_plans"."created_at", "public"."subscription_plans"."updated_at", COALESCE("aggr_selection_0_UserSubscription"."_aggr_count_subscriptions", 0) AS "_aggr_count_subscriptions" FROM "public"."subscription_plans" LEFT JOIN (SELECT "public"."user_subscriptions"."plan_id", COUNT(*) AS "_aggr_count_subscriptions" FROM "public"."user_subscriptions" WHERE 1=1 GROUP BY "public"."user_subscriptions"."plan_id") AS "aggr_selection_0_UserSubscription" ON ("public"."subscription_plans"."id" = "aggr_selection_0_UserSubscription"."plan_id") WHERE 1=1 ORDER BY "public"."subscription_plans"."price_monthly" ASC OFFSET $1
 GET /api/admin/plans 200 in 305ms
prisma:query SELECT "public"."subscription_plans"."id", "public"."subscription_plans"."name", "public"."subscription_plans"."description", "public"."subscription_plans"."price_monthly", "public"."subscription_plans"."price_yearly", "public"."subscription_plans"."ai_messages_included", "public"."subscription_plans"."max_properties", "public"."subscription_plans"."features", "public"."subscription_plans"."is_active", "public"."subscription_plans"."created_at", "public"."subscription_plans"."updated_at", COALESCE("aggr_selection_0_UserSubscription"."_aggr_count_subscriptions", 0) AS "_aggr_count_subscriptions" FROM "public"."subscription_plans" LEFT JOIN (SELECT "public"."user_subscriptions"."plan_id", COUNT(*) AS "_aggr_count_subscriptions" FROM "public"."user_subscriptions" WHERE 1=1 GROUP BY "public"."user_subscriptions"."plan_id") AS "aggr_selection_0_UserSubscription" ON ("public"."subscription_plans"."id" = "aggr_selection_0_UserSubscription"."plan_id") WHERE 1=1 ORDER BY "public"."subscription_plans"."price_monthly" ASC OFFSET $1
 GET /api/admin/plans 200 in 79ms
 ○ Compiling /admin/billing ...
 ✓ Compiled /admin/billing in 527ms (1385 modules)
 GET /admin/billing 200 in 591ms
 ✓ Compiled /api/admin/invoices in 251ms (1387 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."invoices"."id", "public"."invoices"."user_id", "public"."invoices"."subscription_id", "public"."invoices"."invoice_number", "public"."invoices"."amount", "public"."invoices"."discount_amount", "public"."invoices"."final_amount", "public"."invoices"."status", "public"."invoices"."payment_method", "public"."invoices"."payment_reference", "public"."invoices"."due_date", "public"."invoices"."paid_date", "public"."invoices"."notes", "public"."invoices"."created_by", "public"."invoices"."created_at", "public"."invoices"."updated_at" FROM "public"."invoices" WHERE 1=1 ORDER BY "public"."invoices"."created_at" DESC OFFSET $1
 GET /api/admin/invoices 200 in 527ms
prisma:query SELECT "public"."invoices"."id", "public"."invoices"."user_id", "public"."invoices"."subscription_id", "public"."invoices"."invoice_number", "public"."invoices"."amount", "public"."invoices"."discount_amount", "public"."invoices"."final_amount", "public"."invoices"."status", "public"."invoices"."payment_method", "public"."invoices"."payment_reference", "public"."invoices"."due_date", "public"."invoices"."paid_date", "public"."invoices"."notes", "public"."invoices"."created_by", "public"."invoices"."created_at", "public"."invoices"."updated_at" FROM "public"."invoices" WHERE 1=1 ORDER BY "public"."invoices"."created_at" DESC OFFSET $1
 GET /api/admin/invoices 200 in 88ms
 ✓ Compiled in 491ms (2736 modules)
 ✓ Compiled in 419ms (2239 modules)
 ✓ Compiled in 170ms (1255 modules)
 ✓ Compiled in 130ms (2239 modules)
 ✓ Compiled in 189ms (1255 modules)
 ✓ Compiled in 157ms (2239 modules)
 ✓ Compiled in 152ms (1255 modules)
 ✓ Compiled in 126ms (2239 modules)
 ✓ Compiled in 530ms (2145 modules)
 ✓ Compiled in 583ms (2239 modules)
 ✓ Compiled in 183ms (1255 modules)
 ✓ Compiled in 142ms (1255 modules)
 ✓ Compiled in 189ms (1255 modules)
 ✓ Compiled in 149ms (1255 modules)
 ✓ Compiled in 140ms (1255 modules)
 ✓ Compiled in 387ms (1255 modules)
 ✓ Compiled in 159ms (1255 modules)
 ✓ Compiled in 176ms (1255 modules)
 ✓ Compiled in 316ms (1255 modules)
 ✓ Compiled in 336ms (1255 modules)
 ✓ Compiled in 143ms (1255 modules)
 ✓ Compiled in 144ms (1255 modules)
 ✓ Compiled in 132ms (1255 modules)
 ✓ Compiled in 185ms (1255 modules)
 ✓ Compiled in 250ms (1255 modules)
 ✓ Compiled in 146ms (1255 modules)
 ✓ Compiled in 139ms (1255 modules)
 ✓ Compiled in 505ms (2145 modules)
 ✓ Compiled in 195ms (1255 modules)
 ✓ Compiled in 181ms (1255 modules)
 ✓ Compiled in 140ms (1255 modules)
 ✓ Compiled in 248ms (1255 modules)
 ✓ Compiled in 144ms (1255 modules)
 ✓ Compiled in 138ms (1255 modules)
 ✓ Compiled in 247ms (1255 modules)
 ✓ Compiled in 253ms (1255 modules)
 ✓ Compiled in 186ms (1255 modules)
 ✓ Compiled in 135ms (1255 modules)
 ✓ Compiled in 195ms (1255 modules)
 ✓ Compiled in 250ms (1255 modules)
 ✓ Compiled in 143ms (1255 modules)
 ✓ Compiled in 195ms (1255 modules)
 ✓ Compiled in 210ms (1255 modules)
 ✓ Compiled in 491ms (2239 modules)
 ✓ Compiled in 148ms (1255 modules)
 ✓ Compiled in 124ms (2239 modules)
 ✓ Compiled in 392ms (2145 modules)
 ✓ Compiled in 382ms (1255 modules)
 ✓ Compiled in 226ms (1255 modules)
 ✓ Compiled in 376ms (1255 modules)
 ✓ Compiled in 175ms (1255 modules)
 ✓ Compiled in 255ms (1255 modules)
 ✓ Compiled in 149ms (1255 modules)
