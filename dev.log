
> @manualphi/web@2.0.0 dev
> next dev --port 3000

   ▲ Next.js 14.0.3
   - Local:        http://localhost:3000
   - Environments: .env.local, .env

 ✓ Ready in 1783ms
 ○ Compiling /not-found ...
 ✓ Compiled /not-found in 2.2s (589 modules)
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 ✓ Compiled in 147ms (297 modules)
 ✓ Compiled / in 155ms (610 modules)
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 ✓ Compiled in 151ms (315 modules)
 ✓ Compiled in 157ms (315 modules)
 ○ Compiling /main ...
 ✓ Compiled /main in 850ms (1424 modules)
 ✓ Compiled /not-found in 134ms (1429 modules)
 ✓ Compiled /login in 166ms (1454 modules)
 ✓ Compiled /api/properties in 129ms (767 modules)
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
 ✓ Compiled /properties in 240ms (1507 modules)
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
 ⨯ ./app/(dashboard)/properties/[id]/zones/page.tsx:11:0
Module not found: Can't resolve '@/src/components/ui/ZoneTemplateSelector'
[0m [90m  9 |[39m [36mimport[39m { [33mInput[39m } [36mfrom[39m [32m'@/components/ui/Input'[39m[0m
[0m [90m 10 |[39m [36mimport[39m { [33mQRCodeDisplay[39m } [36mfrom[39m [32m'@/components/ui/QRCodeDisplay'[39m[0m
[0m[31m[1m>[22m[39m[90m 11 |[39m [36mimport[39m { [33mZoneTemplateSelector[39m } [36mfrom[39m [32m'@/src/components/ui/ZoneTemplateSelector'[39m[0m
[0m [90m 12 |[39m [36mimport[39m { cn } [36mfrom[39m [32m'@/lib/utils'[39m[0m
[0m [90m 13 |[39m [36mimport[39m { useRouter } [36mfrom[39m [32m'next/navigation'[39m[0m
[0m [90m 14 |[39m[0m

https://nextjs.org/docs/messages/module-not-found
 ○ Compiling /properties/[id]/zones ...
 ⨯ ./app/(dashboard)/properties/[id]/zones/page.tsx:11:0
Module not found: Can't resolve '@/src/components/ui/ZoneTemplateSelector'
[0m [90m  9 |[39m [36mimport[39m { [33mInput[39m } [36mfrom[39m [32m'@/components/ui/Input'[39m[0m
[0m [90m 10 |[39m [36mimport[39m { [33mQRCodeDisplay[39m } [36mfrom[39m [32m'@/components/ui/QRCodeDisplay'[39m[0m
[0m[31m[1m>[22m[39m[90m 11 |[39m [36mimport[39m { [33mZoneTemplateSelector[39m } [36mfrom[39m [32m'@/src/components/ui/ZoneTemplateSelector'[39m[0m
[0m [90m 12 |[39m [36mimport[39m { cn } [36mfrom[39m [32m'@/lib/utils'[39m[0m
[0m [90m 13 |[39m [36mimport[39m { useRouter } [36mfrom[39m [32m'next/navigation'[39m[0m
[0m [90m 14 |[39m[0m

https://nextjs.org/docs/messages/module-not-found
 ✓ Compiled /_error in 546ms (1897 modules)
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 ⨯ ./src/components/ui/ZoneTemplateSelector.tsx
Error: Failed to read source code from /Users/alejandrosatlla/Documents/manualphi/apps/web/src/components/ui/ZoneTemplateSelector.tsx

Caused by:
    No such file or directory (os error 2)

Import trace for requested module:
./src/components/ui/ZoneTemplateSelector.tsx
./app/(dashboard)/properties/[id]/zones/page.tsx
 ✓ Compiled in 236ms (1911 modules)
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
 ✓ Compiled in 358ms (1899 modules)
 ✓ Compiled in 199ms (959 modules)
 ✓ Compiled in 115ms (959 modules)
 ✓ Compiled in 300ms (1850 modules)
 ✓ Compiled in 108ms (959 modules)
 ✓ Compiled in 153ms (1850 modules)
 ✓ Compiled in 114ms (959 modules)
 ✓ Compiled in 131ms (1850 modules)
 ⨯ ./app/providers.tsx:6:0
Module not found: Can't resolve '@/src/providers/AuthProvider'
[0m [90m 4 |[39m [36mimport[39m { [33mReactQueryDevtools[39m } [36mfrom[39m [32m'@tanstack/react-query-devtools'[39m[0m
[0m [90m 5 |[39m [36mimport[39m { useState } [36mfrom[39m [32m'react'[39m[0m
[0m[31m[1m>[22m[39m[90m 6 |[39m [36mimport[39m { [33mAuthProvider[39m } [36mfrom[39m [32m'@/src/providers/AuthProvider'[39m[0m
[0m [90m 7 |[39m[0m
[0m [90m 8 |[39m [36mexport[39m [36mfunction[39m [33mProviders[39m({ children }[33m:[39m { children[33m:[39m [33mReact[39m[33m.[39m[33mReactNode[39m }) {[0m
[0m [90m 9 |[39m   [36mconst[39m [queryClient] [33m=[39m useState([0m

https://nextjs.org/docs/messages/module-not-found
 ✓ Compiled in 190ms (1866 modules)
 ⨯ ./app/api/auth/me/route.ts:2:0
Module not found: Can't resolve 'jsonwebtoken'
[0m [90m 1 |[39m [36mimport[39m { [33mNextRequest[39m[33m,[39m [33mNextResponse[39m } [36mfrom[39m [32m'next/server'[39m[0m
[0m[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m jwt [36mfrom[39m [32m'jsonwebtoken'[39m[0m
[0m [90m 3 |[39m [36mimport[39m { prisma } [36mfrom[39m [32m'@/lib/prisma'[39m[0m
[0m [90m 4 |[39m[0m
[0m [90m 5 |[39m [36mconst[39m [33mJWT_SECRET[39m [33m=[39m process[33m.[39menv[33m.[39m[33mJWT_SECRET[39m [33m||[39m [32m'your-secret-key'[39m[0m

https://nextjs.org/docs/messages/module-not-found
 ⨯ ./app/api/auth/me/route.ts:2:0
Module not found: Can't resolve 'jsonwebtoken'
[0m [90m 1 |[39m [36mimport[39m { [33mNextRequest[39m[33m,[39m [33mNextResponse[39m } [36mfrom[39m [32m'next/server'[39m[0m
[0m[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m jwt [36mfrom[39m [32m'jsonwebtoken'[39m[0m
[0m [90m 3 |[39m [36mimport[39m { prisma } [36mfrom[39m [32m'@/lib/prisma'[39m[0m
[0m [90m 4 |[39m[0m
[0m [90m 5 |[39m [36mconst[39m [33mJWT_SECRET[39m [33m=[39m process[33m.[39menv[33m.[39m[33mJWT_SECRET[39m [33m||[39m [32m'your-secret-key'[39m[0m

https://nextjs.org/docs/messages/module-not-found
 ○ Compiling /not-found ...
 ⨯ ./app/api/auth/me/route.ts:2:0
Module not found: Can't resolve 'jsonwebtoken'
[0m [90m 1 |[39m [36mimport[39m { [33mNextRequest[39m[33m,[39m [33mNextResponse[39m } [36mfrom[39m [32m'next/server'[39m[0m
[0m[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m jwt [36mfrom[39m [32m'jsonwebtoken'[39m[0m
[0m [90m 3 |[39m [36mimport[39m { prisma } [36mfrom[39m [32m'@/lib/prisma'[39m[0m
[0m [90m 4 |[39m[0m
[0m [90m 5 |[39m [36mconst[39m [33mJWT_SECRET[39m [33m=[39m process[33m.[39menv[33m.[39m[33mJWT_SECRET[39m [33m||[39m [32m'your-secret-key'[39m[0m

https://nextjs.org/docs/messages/module-not-found
 ⨯ ./app/api/auth/me/route.ts:2:0
Module not found: Can't resolve 'jsonwebtoken'
[0m [90m 1 |[39m [36mimport[39m { [33mNextRequest[39m[33m,[39m [33mNextResponse[39m } [36mfrom[39m [32m'next/server'[39m[0m
[0m[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m jwt [36mfrom[39m [32m'jsonwebtoken'[39m[0m
[0m [90m 3 |[39m [36mimport[39m { prisma } [36mfrom[39m [32m'@/lib/prisma'[39m[0m
[0m [90m 4 |[39m[0m
[0m [90m 5 |[39m [36mconst[39m [33mJWT_SECRET[39m [33m=[39m process[33m.[39menv[33m.[39m[33mJWT_SECRET[39m [33m||[39m [32m'your-secret-key'[39m[0m

https://nextjs.org/docs/messages/module-not-found
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 ✓ Compiled /not-found in 581ms (2105 modules)
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 ✓ Compiled in 143ms (1970 modules)
 ✓ Compiled in 200ms (1984 modules)
 ✓ Compiled /api/auth/login in 117ms (1025 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`phone`, `main`.`users`.`password`, `main`.`users`.`emailVerified`, `main`.`users`.`phoneVerified`, `main`.`users`.`preferredLanguage`, `main`.`users`.`timezone`, `main`.`users`.`role`, `main`.`users`.`status`, `main`.`users`.`subscription`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
Login error: Error: Illegal arguments: string, object
    at _async (webpack-internal:///(rsc)/../../node_modules/bcryptjs/index.js:217:42)
    at eval (webpack-internal:///(rsc)/../../node_modules/bcryptjs/index.js:233:9)
    at new Promise (<anonymous>)
    at Object.compare (webpack-internal:///(rsc)/../../node_modules/bcryptjs/index.js:232:19)
    at POST (webpack-internal:///(rsc)/./app/api/auth/login/route.ts:40:88)
    at async /Users/alejandrosatlla/Documents/manualphi/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:6:62609
 ⨯ ./app/(dashboard)/main/page.tsx:31:0
Module not found: Can't resolve '@/src/providers/AuthProvider'
[0m [90m 29 |[39m [36mimport[39m { [33mDashboardNavbar[39m } [36mfrom[39m [32m'@/components/layout/DashboardNavbar'[39m[0m
[0m [90m 30 |[39m [36mimport[39m { [33mDashboardFooter[39m } [36mfrom[39m [32m'@/components/layout/DashboardFooter'[39m[0m
[0m[31m[1m>[22m[39m[90m 31 |[39m [36mimport[39m { useAuth } [36mfrom[39m [32m'@/src/providers/AuthProvider'[39m[0m
[0m [90m 32 |[39m [36mimport[39m [33m*[39m [36mas[39m [33mDropdownMenu[39m [36mfrom[39m [32m'@radix-ui/react-dropdown-menu'[39m[0m
[0m [90m 33 |[39m[0m
[0m [90m 34 |[39m [36minterface[39m [33mProperty[39m {[0m

https://nextjs.org/docs/messages/module-not-found
 ⨯ ./app/(dashboard)/main/page.tsx:31:0
Module not found: Can't resolve '../../src/providers/AuthProvider'
[0m [90m 29 |[39m [36mimport[39m { [33mDashboardNavbar[39m } [36mfrom[39m [32m'@/components/layout/DashboardNavbar'[39m[0m
[0m [90m 30 |[39m [36mimport[39m { [33mDashboardFooter[39m } [36mfrom[39m [32m'@/components/layout/DashboardFooter'[39m[0m
[0m[31m[1m>[22m[39m[90m 31 |[39m [36mimport[39m { useAuth } [36mfrom[39m [32m'../../src/providers/AuthProvider'[39m[0m
[0m [90m 32 |[39m [36mimport[39m [33m*[39m [36mas[39m [33mDropdownMenu[39m [36mfrom[39m [32m'@radix-ui/react-dropdown-menu'[39m[0m
[0m [90m 33 |[39m[0m
[0m [90m 34 |[39m [36minterface[39m [33mProperty[39m {[0m

https://nextjs.org/docs/messages/module-not-found
 ✓ Compiled /not-found in 437ms (1857 modules)
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 ✓ Compiled /api/auth/me in 119ms (1009 modules)
 ✓ Compiled in 114ms (962 modules)
 ✓ Compiled in 99ms (962 modules)
 ✓ Compiled /api/auth/login in 116ms (1012 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`phone`, `main`.`users`.`password`, `main`.`users`.`emailVerified`, `main`.`users`.`phoneVerified`, `main`.`users`.`preferredLanguage`, `main`.`users`.`timezone`, `main`.`users`.`role`, `main`.`users`.`status`, `main`.`users`.`subscription`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`phone`, `main`.`users`.`password`, `main`.`users`.`emailVerified`, `main`.`users`.`phoneVerified`, `main`.`users`.`preferredLanguage`, `main`.`users`.`timezone`, `main`.`users`.`role`, `main`.`users`.`status`, `main`.`users`.`subscription`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`phone`, `main`.`users`.`password`, `main`.`users`.`emailVerified`, `main`.`users`.`phoneVerified`, `main`.`users`.`preferredLanguage`, `main`.`users`.`timezone`, `main`.`users`.`role`, `main`.`users`.`status`, `main`.`users`.`subscription`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
 ✓ Compiled in 423ms (1972 modules)
 ✓ Compiled /api/auth/me in 180ms (1009 modules)
 ✓ Compiled /api/auth/login in 92ms (1012 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`phone`, `main`.`users`.`password`, `main`.`users`.`emailVerified`, `main`.`users`.`phoneVerified`, `main`.`users`.`preferredLanguage`, `main`.`users`.`timezone`, `main`.`users`.`role`, `main`.`users`.`status`, `main`.`users`.`subscription`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
 ✓ Compiled in 254ms (1974 modules)
 ✓ Compiled in 245ms (1974 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`phone`, `main`.`users`.`password`, `main`.`users`.`emailVerified`, `main`.`users`.`phoneVerified`, `main`.`users`.`preferredLanguage`, `main`.`users`.`timezone`, `main`.`users`.`role`, `main`.`users`.`status`, `main`.`users`.`subscription`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
Password comparison: {
  provided: 'Demo1234',
  stored: '$2b$12$wH96n2OW/eaTCOXWngrWTOcvbq3r2cpVLTes6BorJNxSN7kv.Hj2i'
}
Password valid: true
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`phone`, `main`.`users`.`password`, `main`.`users`.`emailVerified`, `main`.`users`.`phoneVerified`, `main`.`users`.`preferredLanguage`, `main`.`users`.`timezone`, `main`.`users`.`role`, `main`.`users`.`status`, `main`.`users`.`subscription`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
Password comparison: {
  provided: 'Demo1234',
  stored: '$2b$12$wH96n2OW/eaTCOXWngrWTOcvbq3r2cpVLTes6BorJNxSN7kv.Hj2i'
}
Password valid: true
 ✓ Compiled in 186ms (1974 modules)
 ✓ Compiled in 184ms (1974 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`phone`, `main`.`users`.`password`, `main`.`users`.`emailVerified`, `main`.`users`.`phoneVerified`, `main`.`users`.`preferredLanguage`, `main`.`users`.`timezone`, `main`.`users`.`role`, `main`.`users`.`status`, `main`.`users`.`subscription`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`phone`, `main`.`users`.`password`, `main`.`users`.`emailVerified`, `main`.`users`.`phoneVerified`, `main`.`users`.`preferredLanguage`, `main`.`users`.`timezone`, `main`.`users`.`role`, `main`.`users`.`status`, `main`.`users`.`subscription`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
 ✓ Compiled in 432ms (1974 modules)
 ✓ Compiled in 222ms (1974 modules)
 ✓ Compiled in 238ms (1974 modules)
 ✓ Compiled in 170ms (1974 modules)
 ✓ Compiled in 186ms (1974 modules)
Auth check - token exists: false
Auth check - token exists: false
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`phone`, `main`.`users`.`password`, `main`.`users`.`emailVerified`, `main`.`users`.`phoneVerified`, `main`.`users`.`preferredLanguage`, `main`.`users`.`timezone`, `main`.`users`.`role`, `main`.`users`.`status`, `main`.`users`.`subscription`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
Setting cookie with token: eyJhbGciOiJIUzI1NiIs...
Login successful for user: demo@manualphi.com
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`phone`, `main`.`users`.`password`, `main`.`users`.`emailVerified`, `main`.`users`.`phoneVerified`, `main`.`users`.`preferredLanguage`, `main`.`users`.`timezone`, `main`.`users`.`role`, `main`.`users`.`status`, `main`.`users`.`subscription`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
Setting cookie with token: eyJhbGciOiJIUzI1NiIs...
Login successful for user: demo@manualphi.com
 ✓ Compiled in 330ms (1974 modules)
 ✓ Compiled in 189ms (1974 modules)
 ✓ Compiled in 137ms (960 modules)
 ✓ Compiled in 55ms (135 modules)
 ✓ Compiled /not-found in 132ms (1857 modules)
 ✓ Compiled /api/auth/me in 101ms (1009 modules)
Auth check - token exists: false
Auth check - token exists: false
 ✓ Compiled /api/auth/login in 99ms (1012 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`phone`, `main`.`users`.`password`, `main`.`users`.`emailVerified`, `main`.`users`.`phoneVerified`, `main`.`users`.`preferredLanguage`, `main`.`users`.`timezone`, `main`.`users`.`role`, `main`.`users`.`status`, `main`.`users`.`subscription`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt`, `main`.`users`.`lastLoginAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
Setting cookie with token: eyJhbGciOiJIUzI1NiIs...
Login successful for user: demo@manualphi.com
 ✓ Compiled in 473ms (1974 modules)
 ✓ Compiled in 273ms (1974 modules)
 ✓ Compiled in 62ms (135 modules)
Auth check - token exists: false
Auth check - token exists: false
 ✓ Compiled /api/properties in 245ms (1019 modules)
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
 ✓ Compiled /properties/[id]/zones/[zoneId]/steps in 425ms (1987 modules)
 ✓ Compiled /not-found in 143ms (1992 modules)
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
 ○ Compiling /guide/[propertyId] ...
 ✓ Compiled /guide/[propertyId] in 602ms (1927 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled /api/properties/[id] in 80ms (1042 modules)
 ✓ Compiled in 234ms (2007 modules)
Auth check - token exists: false
Auth check - token exists: false
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
 ○ Compiling /properties/[id] ...
 ✓ Compiled /properties/[id] in 603ms (1893 modules)
 ✓ Compiled /api/properties/[id] in 90ms (952 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
 ✓ Compiled /api/properties in 110ms (965 modules)
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
 ✓ Compiled /not-found in 164ms (1935 modules)
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
 ✓ Compiled /api/properties in 565ms (1826 modules)
 ✓ Compiled in 0ms (882 modules)
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
 ✓ Compiled /properties in 323ms (889 modules)
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled /not-found in 430ms (1942 modules)
Auth check - token exists: false
prisma:query SELECT 1
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
Auth check - token exists: false
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
 ✓ Compiled in 333ms (1899 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
 ⨯ ./app/(dashboard)/main/page.tsx
Error: 
  [31mx[0m Unexpected token `div`. Expected jsx identifier
     ,-[[36;1;4m/Users/alejandrosatlla/Documents/manualphi/apps/web/app/(dashboard)/main/page.tsx[0m:185:1]
 [2m185[0m |   }
 [2m186[0m | 
 [2m187[0m |   return (
 [2m188[0m |     <div className="min-h-screen flex flex-col bg-gray-50">
     : [31;1m     ^^^[0m
 [2m189[0m |       <DashboardNavbar user={user} />
 [2m190[0m |       
 [2m190[0m |       <main className="flex-1 pt-16">
     `----

Caused by:
    Syntax Error

Import trace for requested module:
./app/(dashboard)/main/page.tsx
 ⨯ ./app/(dashboard)/main/page.tsx
Error: 
  [31mx[0m Unexpected token `div`. Expected jsx identifier
     ,-[[36;1;4m/Users/alejandrosatlla/Documents/manualphi/apps/web/app/(dashboard)/main/page.tsx[0m:185:1]
 [2m185[0m |   }
 [2m186[0m | 
 [2m187[0m |   return (
 [2m188[0m |     <div className="min-h-screen flex flex-col bg-gray-50">
     : [31;1m     ^^^[0m
 [2m189[0m |       <DashboardNavbar user={user} />
 [2m190[0m |       
 [2m190[0m |       <main className="flex-1 pt-16">
     `----

Caused by:
    Syntax Error

Import trace for requested module:
./app/(dashboard)/main/page.tsx
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 ✓ Compiled in 410ms (1769 modules)
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 ✓ Compiled /api/properties/[id] in 276ms (1887 modules)
Auth check - token exists: false
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
Auth check - token exists: false
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
Auth check - token exists: false
Auth check - token exists: false
Auth check - token exists: false
Auth check - token exists: false
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
Auth check - token exists: false
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
Auth check - token exists: false
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
 ✓ Compiled in 372ms (1778 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 312ms (1777 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 221ms (1777 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 309ms (1777 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 233ms (981 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 307ms (1777 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 385ms (1777 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 236ms (1777 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ○ Compiling /properties/[id]/zones ...
 ✓ Compiled /properties/[id]/zones in 753ms (1906 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 231ms (1900 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 281ms (1900 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 218ms (1900 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 240ms (1902 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 345ms (1902 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled /properties/[id]/zones/[zoneId]/steps in 224ms (931 modules)
 ✓ Compiled /not-found in 398ms (1904 modules)
 ✓ Compiled in 805ms (1954 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 163ms (982 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 228ms (982 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 427ms (1833 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 219ms (1833 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 207ms (1833 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 314ms (1833 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 227ms (1833 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 229ms (1833 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ⨯ ./app/(dashboard)/properties/[id]/zones/page.tsx
Error: 
  [31mx[0m Unexpected token `div`. Expected jsx identifier
     ,-[[36;1;4m/Users/alejandrosatlla/Documents/manualphi/apps/web/app/(dashboard)/properties/[id]/zones/page.tsx[0m:226:1]
 [2m226[0m |   }
 [2m227[0m | 
 [2m228[0m |   return (
 [2m229[0m |     <div className="max-w-7xl mx-auto p-6">
     : [31;1m     ^^^[0m
 [2m230[0m |       {/* Header */}
 [2m231[0m |       <div className="flex items-center justify-between mb-8">
 [2m231[0m |         <div>
     `----

Caused by:
    Syntax Error

Import trace for requested module:
./app/(dashboard)/properties/[id]/zones/page.tsx
 ⨯ ./app/(dashboard)/properties/[id]/zones/page.tsx
Error: 
  [31mx[0m Unexpected token `div`. Expected jsx identifier
     ,-[[36;1;4m/Users/alejandrosatlla/Documents/manualphi/apps/web/app/(dashboard)/properties/[id]/zones/page.tsx[0m:226:1]
 [2m226[0m |   }
 [2m227[0m | 
 [2m228[0m |   return (
 [2m229[0m |     <div className="max-w-7xl mx-auto p-6">
     : [31;1m     ^^^[0m
 [2m230[0m |       {/* Header */}
 [2m231[0m |       <div className="flex items-center justify-between mb-8">
 [2m231[0m |         <div>
     `----

Caused by:
    Syntax Error

Import trace for requested module:
./app/(dashboard)/properties/[id]/zones/page.tsx
 ○ Compiling /not-found ...
 ⨯ ./app/(dashboard)/properties/[id]/zones/page.tsx
Error: 
  [31mx[0m Unexpected token `div`. Expected jsx identifier
     ,-[[36;1;4m/Users/alejandrosatlla/Documents/manualphi/apps/web/app/(dashboard)/properties/[id]/zones/page.tsx[0m:226:1]
 [2m226[0m |   }
 [2m227[0m | 
 [2m228[0m |   return (
 [2m229[0m |     <div className="max-w-7xl mx-auto p-6">
     : [31;1m     ^^^[0m
 [2m230[0m |       {/* Header */}
 [2m231[0m |       <div className="flex items-center justify-between mb-8">
 [2m231[0m |         <div>
     `----

Caused by:
    Syntax Error

Import trace for requested module:
./app/(dashboard)/properties/[id]/zones/page.tsx
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 ⨯ ./app/(dashboard)/properties/[id]/zones/page.tsx
Error: 
  [31mx[0m Unexpected token `div`. Expected jsx identifier
     ,-[[36;1;4m/Users/alejandrosatlla/Documents/manualphi/apps/web/app/(dashboard)/properties/[id]/zones/page.tsx[0m:226:1]
 [2m226[0m |   }
 [2m227[0m | 
 [2m228[0m |   return (
 [2m229[0m |     <div className="max-w-7xl mx-auto p-6">
     : [31;1m     ^^^[0m
 [2m230[0m |       {/* Header */}
 [2m231[0m |       <div className="flex items-center justify-between mb-8">
 [2m231[0m |         <div>
     `----

Caused by:
    Syntax Error

Import trace for requested module:
./app/(dashboard)/properties/[id]/zones/page.tsx
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 ✓ Compiled /not-found in 673ms (1824 modules)
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 ✓ Compiled /api/properties/[id] in 342ms (1926 modules)
Auth check - token exists: false
prisma:query SELECT 1
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
Auth check - token exists: false
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
Auth check - token exists: false
Auth check - token exists: false
Auth check - token exists: false
Auth check - token exists: false
 ✓ Compiled in 372ms (1942 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ✓ Compiled in 232ms (1942 modules)
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ⨯ ./app/(dashboard)/properties/[id]/zones/page.tsx
Error: 
  [31mx[0m Unexpected token `div`. Expected jsx identifier
     ,-[[36;1;4m/Users/alejandrosatlla/Documents/manualphi/apps/web/app/(dashboard)/properties/[id]/zones/page.tsx[0m:185:1]
 [2m185[0m |   }
 [2m186[0m | 
 [2m187[0m |   return (
 [2m188[0m |     <div className="max-w-7xl mx-auto p-6">
     : [31;1m     ^^^[0m
 [2m189[0m |       {/* Header */}
 [2m190[0m |       <div className="flex items-center justify-between mb-8">
 [2m190[0m |         <div>
     `----

Caused by:
    Syntax Error

Import trace for requested module:
./app/(dashboard)/properties/[id]/zones/page.tsx
 ✓ Compiled in 289ms (1928 modules)
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 ⚠ Unsupported metadata viewport is configured in metadata export. Please move it to viewport export instead.
 ⚠ Unsupported metadata themeColor is configured in metadata export. Please move it to viewport export instead.
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 ⚠ Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
Auth check - token exists: false
prisma:query SELECT 1
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
Auth check - token exists: false
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
Auth check - token exists: false
Auth check - token exists: false
Auth check - token exists: false
Auth check - token exists: false
Auth check - token exists: false
Auth check - token exists: false
 ✓ Compiled /api/properties in 243ms (965 modules)
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`properties`.`id` FROM `main`.`properties` WHERE `main`.`properties`.`hostId` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt`, COALESCE(`aggr_selection_0_Zone`.`_aggr_count_zones`, 0) AS `_aggr_count_zones` FROM `main`.`properties` LEFT JOIN (SELECT `main`.`zones`.`propertyId`, COUNT(*) AS `_aggr_count_zones` FROM `main`.`zones` WHERE 1=1 GROUP BY `main`.`zones`.`propertyId`) AS `aggr_selection_0_Zone` ON (`main`.`properties`.`id` = `aggr_selection_0_Zone`.`propertyId`) WHERE `main`.`properties`.`hostId` = ? ORDER BY `main`.`properties`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?,?) LIMIT ? OFFSET ?
 ✓ Compiled /properties/[id] in 200ms (971 modules)
 ✓ Compiled /api/properties/[id] in 92ms (973 modules)
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
 ✓ Compiled /properties/[id]/zones/new in 476ms (1980 modules)
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
 ✓ Compiled /api/properties/[id]/zones in 123ms (995 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query INSERT INTO `main`.`zones` (`id`, `propertyId`, `name`, `description`, `icon`, `order`, `qrCode`, `accessCode`, `whatsappEnabled`, `errorReportsEnabled`, `commentsEnabled`, `ratingsEnabled`, `status`, `isPublished`, `isActive`, `viewCount`, `avgRating`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) RETURNING `id` AS `id`, `propertyId` AS `propertyId`, `name` AS `name`, `description` AS `description`, `icon` AS `icon`, `color` AS `color`, `order` AS `order`, `qrCode` AS `qrCode`, `accessCode` AS `accessCode`, `whatsappEnabled` AS `whatsappEnabled`, `errorReportsEnabled` AS `errorReportsEnabled`, `commentsEnabled` AS `commentsEnabled`, `ratingsEnabled` AS `ratingsEnabled`, `status` AS `status`, `isPublished` AS `isPublished`, `isActive` AS `isActive`, `viewCount` AS `viewCount`, `lastViewedAt` AS `lastViewedAt`, `avgRating` AS `avgRating`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
 ✓ Compiled /properties/[id]/zones/[zoneId] in 357ms (1998 modules)
 ✓ Compiled /api/properties/[id]/zones/[zoneId] in 114ms (1006 modules)
Error fetching zone: PrismaClientValidationError: 
Invalid `prisma.zone.findFirst()` invocation:

{
  where: {
    id: "cmboy2fbx00017cz5ox9y9yr1",
    propertyId: "cmbos8z8900037cq07elyxkpl"
  },
  include: {
    steps: {
    ~~~~~
      orderBy: {
        order: "asc"
      }
    },
    property: {
      select: {
        name: true
      }
    },
?   elements?: true,
?   comments?: true,
?   errorReports?: true,
?   ratings?: true
  }
}

Unknown field `steps` for include statement on model `Zone`. Available options are marked with ?.
    at kn (/Users/alejandrosatlla/Documents/manualphi/node_modules/@prisma/client/runtime/library.js:29:1363)
    at Zn.handleRequestError (/Users/alejandrosatlla/Documents/manualphi/node_modules/@prisma/client/runtime/library.js:121:7102)
    at Zn.handleAndLogRequestError (/Users/alejandrosatlla/Documents/manualphi/node_modules/@prisma/client/runtime/library.js:121:6784)
    at Zn.request (/Users/alejandrosatlla/Documents/manualphi/node_modules/@prisma/client/runtime/library.js:121:6491)
    at async l (/Users/alejandrosatlla/Documents/manualphi/node_modules/@prisma/client/runtime/library.js:130:9778)
    at async GET (webpack-internal:///(rsc)/./app/api/properties/[id]/zones/[zoneId]/route.ts:15:22)
    at async /Users/alejandrosatlla/Documents/manualphi/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:6:62609 {
  clientVersion: '6.9.0'
}
Error fetching zone: PrismaClientValidationError: 
Invalid `prisma.zone.findFirst()` invocation:

{
  where: {
    id: "cmboy2fbx00017cz5ox9y9yr1",
    propertyId: "cmbos8z8900037cq07elyxkpl"
  },
  include: {
    steps: {
    ~~~~~
      orderBy: {
        order: "asc"
      }
    },
    property: {
      select: {
        name: true
      }
    },
?   elements?: true,
?   comments?: true,
?   errorReports?: true,
?   ratings?: true
  }
}

Unknown field `steps` for include statement on model `Zone`. Available options are marked with ?.
    at kn (/Users/alejandrosatlla/Documents/manualphi/node_modules/@prisma/client/runtime/library.js:29:1363)
    at Zn.handleRequestError (/Users/alejandrosatlla/Documents/manualphi/node_modules/@prisma/client/runtime/library.js:121:7102)
    at Zn.handleAndLogRequestError (/Users/alejandrosatlla/Documents/manualphi/node_modules/@prisma/client/runtime/library.js:121:6784)
    at Zn.request (/Users/alejandrosatlla/Documents/manualphi/node_modules/@prisma/client/runtime/library.js:121:6491)
    at async l (/Users/alejandrosatlla/Documents/manualphi/node_modules/@prisma/client/runtime/library.js:130:9778)
    at async GET (webpack-internal:///(rsc)/./app/api/properties/[id]/zones/[zoneId]/route.ts:15:22)
    at async /Users/alejandrosatlla/Documents/manualphi/node_modules/next/dist/compiled/next-server/app-route.runtime.dev.js:6:62609 {
  clientVersion: '6.9.0'
}
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
prisma:query SELECT 1
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query INSERT INTO `main`.`zones` (`id`, `propertyId`, `name`, `description`, `icon`, `order`, `qrCode`, `accessCode`, `whatsappEnabled`, `errorReportsEnabled`, `commentsEnabled`, `ratingsEnabled`, `status`, `isPublished`, `isActive`, `viewCount`, `avgRating`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) RETURNING `id` AS `id`, `propertyId` AS `propertyId`, `name` AS `name`, `description` AS `description`, `icon` AS `icon`, `color` AS `color`, `order` AS `order`, `qrCode` AS `qrCode`, `accessCode` AS `accessCode`, `whatsappEnabled` AS `whatsappEnabled`, `errorReportsEnabled` AS `errorReportsEnabled`, `commentsEnabled` AS `commentsEnabled`, `ratingsEnabled` AS `ratingsEnabled`, `status` AS `status`, `isPublished` AS `isPublished`, `isActive` AS `isActive`, `viewCount` AS `viewCount`, `lastViewedAt` AS `lastViewedAt`, `avgRating` AS `avgRating`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`, `publishedAt` AS `publishedAt`
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
prisma:query SELECT `main`.`properties`.`id`, `main`.`properties`.`hostId`, `main`.`properties`.`organizationId`, `main`.`properties`.`buildingId`, `main`.`properties`.`name`, `main`.`properties`.`description`, `main`.`properties`.`street`, `main`.`properties`.`city`, `main`.`properties`.`state`, `main`.`properties`.`country`, `main`.`properties`.`postalCode`, `main`.`properties`.`latitude`, `main`.`properties`.`longitude`, `main`.`properties`.`type`, `main`.`properties`.`bedrooms`, `main`.`properties`.`bathrooms`, `main`.`properties`.`maxGuests`, `main`.`properties`.`squareMeters`, `main`.`properties`.`defaultLanguages`, `main`.`properties`.`isPublished`, `main`.`properties`.`profileImage`, `main`.`properties`.`hostContactName`, `main`.`properties`.`hostContactPhone`, `main`.`properties`.`hostContactEmail`, `main`.`properties`.`hostContactLanguage`, `main`.`properties`.`hostContactPhoto`, `main`.`properties`.`status`, `main`.`properties`.`createdAt`, `main`.`properties`.`updatedAt`, `main`.`properties`.`publishedAt` FROM `main`.`properties` WHERE (`main`.`properties`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`property_analytics`.`id`, `main`.`property_analytics`.`propertyId`, `main`.`property_analytics`.`totalViews`, `main`.`property_analytics`.`uniqueVisitors`, `main`.`property_analytics`.`avgSessionDuration`, `main`.`property_analytics`.`overallRating`, `main`.`property_analytics`.`totalRatings`, `main`.`property_analytics`.`improvementScore`, `main`.`property_analytics`.`whatsappClicks`, `main`.`property_analytics`.`errorReportsCount`, `main`.`property_analytics`.`commentsCount`, `main`.`property_analytics`.`lastCalculatedAt` FROM `main`.`property_analytics` WHERE `main`.`property_analytics`.`propertyId` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`zones`.`id`, `main`.`zones`.`propertyId`, `main`.`zones`.`name`, `main`.`zones`.`description`, `main`.`zones`.`icon`, `main`.`zones`.`color`, `main`.`zones`.`order`, `main`.`zones`.`qrCode`, `main`.`zones`.`accessCode`, `main`.`zones`.`whatsappEnabled`, `main`.`zones`.`errorReportsEnabled`, `main`.`zones`.`commentsEnabled`, `main`.`zones`.`ratingsEnabled`, `main`.`zones`.`status`, `main`.`zones`.`isPublished`, `main`.`zones`.`isActive`, `main`.`zones`.`viewCount`, `main`.`zones`.`lastViewedAt`, `main`.`zones`.`avgRating`, `main`.`zones`.`createdAt`, `main`.`zones`.`updatedAt`, `main`.`zones`.`publishedAt` FROM `main`.`zones` WHERE 1=1 LIMIT ? OFFSET ?
